Index.PACKAGES = {"com.clluc.stockmind" : [], "com.clluc.stockmind.port" : [], "com.clluc" : [], "com" : [], "com.clluc.stockmind.port.secondary" : [{"name" : "com.clluc.stockmind.port.secondary.AppConfigPort", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/port\/secondary\/AppConfigPort.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/port\/secondary\/AppConfigPort.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/port\/secondary\/AppConfigPort.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/port\/secondary\/AppConfigPort.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/port\/secondary\/AppConfigPort.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/port\/secondary\/AppConfigPort.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/port\/secondary\/AppConfigPort.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/AppConfigPort.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/AppConfigPort.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/AppConfigPort.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/port\/secondary\/AppConfigPort.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/port\/secondary\/AppConfigPort.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/port\/secondary\/AppConfigPort.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/port\/secondary\/AppConfigPort.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/port\/secondary\/AppConfigPort.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/port\/secondary\/AppConfigPort.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/port\/secondary\/AppConfigPort.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/AppConfigPort.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/AppConfigPort.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "setBlock", "tail" : "(key: String, block: Block)(ec: ExecutionContext): Future[Block]", "member" : "com.clluc.stockmind.port.secondary.AppConfigPort.setBlock", "link" : "com\/clluc\/stockmind\/port\/secondary\/AppConfigPort.html#setBlock(key:String,block:com.clluc.stockmind.core.ethereum.Block)(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[com.clluc.stockmind.core.ethereum.Block]", "kind" : "abstract def"}, {"label" : "getBlock", "tail" : "(key: String)(ec: ExecutionContext): Future[Block]", "member" : "com.clluc.stockmind.port.secondary.AppConfigPort.getBlock", "link" : "com\/clluc\/stockmind\/port\/secondary\/AppConfigPort.html#getBlock(key:String)(implicitec:scala.concurrent.ExecutionContext):scala.concurrent.Future[com.clluc.stockmind.core.ethereum.Block]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/clluc\/stockmind\/port\/secondary\/AppConfigPort.html", "kind" : "trait"}, {"name" : "com.clluc.stockmind.port.secondary.AuthTokenPort", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/port\/secondary\/AuthTokenPort.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/port\/secondary\/AuthTokenPort.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/port\/secondary\/AuthTokenPort.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/port\/secondary\/AuthTokenPort.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/port\/secondary\/AuthTokenPort.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/port\/secondary\/AuthTokenPort.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/port\/secondary\/AuthTokenPort.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/AuthTokenPort.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/AuthTokenPort.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/AuthTokenPort.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/port\/secondary\/AuthTokenPort.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/port\/secondary\/AuthTokenPort.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/port\/secondary\/AuthTokenPort.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/port\/secondary\/AuthTokenPort.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/port\/secondary\/AuthTokenPort.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/port\/secondary\/AuthTokenPort.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/port\/secondary\/AuthTokenPort.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/AuthTokenPort.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/AuthTokenPort.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "cleanExpiredAuthTokens", "tail" : "(): Future[Seq[AuthToken]]", "member" : "com.clluc.stockmind.port.secondary.AuthTokenPort.cleanExpiredAuthTokens", "link" : "com\/clluc\/stockmind\/port\/secondary\/AuthTokenPort.html#cleanExpiredAuthTokens():scala.concurrent.Future[Seq[com.clluc.stockmind.core.user.AuthToken]]", "kind" : "abstract def"}, {"label" : "validateAuthTokenForUser", "tail" : "(id: UUID): Future[Option[AuthToken]]", "member" : "com.clluc.stockmind.port.secondary.AuthTokenPort.validateAuthTokenForUser", "link" : "com\/clluc\/stockmind\/port\/secondary\/AuthTokenPort.html#validateAuthTokenForUser(id:java.util.UUID):scala.concurrent.Future[Option[com.clluc.stockmind.core.user.AuthToken]]", "kind" : "abstract def"}, {"label" : "createAuthTokenForUser", "tail" : "(userID: UUID, expiry: FiniteDuration): Future[AuthToken]", "member" : "com.clluc.stockmind.port.secondary.AuthTokenPort.createAuthTokenForUser", "link" : "com\/clluc\/stockmind\/port\/secondary\/AuthTokenPort.html#createAuthTokenForUser(userID:java.util.UUID,expiry:scala.concurrent.duration.FiniteDuration):scala.concurrent.Future[com.clluc.stockmind.core.user.AuthToken]", "kind" : "abstract def"}, {"label" : "removeAuthTokenWithId", "tail" : "(id: UUID): Future[Unit]", "member" : "com.clluc.stockmind.port.secondary.AuthTokenPort.removeAuthTokenWithId", "link" : "com\/clluc\/stockmind\/port\/secondary\/AuthTokenPort.html#removeAuthTokenWithId(id:java.util.UUID):scala.concurrent.Future[Unit]", "kind" : "abstract def"}, {"label" : "saveAuthToken", "tail" : "(token: AuthToken): Future[AuthToken]", "member" : "com.clluc.stockmind.port.secondary.AuthTokenPort.saveAuthToken", "link" : "com\/clluc\/stockmind\/port\/secondary\/AuthTokenPort.html#saveAuthToken(token:com.clluc.stockmind.core.user.AuthToken):scala.concurrent.Future[com.clluc.stockmind.core.user.AuthToken]", "kind" : "abstract def"}, {"label" : "findAuthTokensExpired", "tail" : "(dateTime: DateTime): Future[Seq[AuthToken]]", "member" : "com.clluc.stockmind.port.secondary.AuthTokenPort.findAuthTokensExpired", "link" : "com\/clluc\/stockmind\/port\/secondary\/AuthTokenPort.html#findAuthTokensExpired(dateTime:org.joda.time.DateTime):scala.concurrent.Future[Seq[com.clluc.stockmind.core.user.AuthToken]]", "kind" : "abstract def"}, {"label" : "findAuthTokenByUserId", "tail" : "(id: UUID): Future[Option[AuthToken]]", "member" : "com.clluc.stockmind.port.secondary.AuthTokenPort.findAuthTokenByUserId", "link" : "com\/clluc\/stockmind\/port\/secondary\/AuthTokenPort.html#findAuthTokenByUserId(id:java.util.UUID):scala.concurrent.Future[Option[com.clluc.stockmind.core.user.AuthToken]]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/clluc\/stockmind\/port\/secondary\/AuthTokenPort.html", "kind" : "trait"}, {"name" : "com.clluc.stockmind.port.secondary.Erc20InfoPort", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20InfoPort.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20InfoPort.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20InfoPort.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20InfoPort.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20InfoPort.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20InfoPort.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20InfoPort.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20InfoPort.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20InfoPort.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20InfoPort.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20InfoPort.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20InfoPort.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20InfoPort.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20InfoPort.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20InfoPort.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20InfoPort.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20InfoPort.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20InfoPort.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20InfoPort.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "createEthereumToken", "tail" : "(token: Erc20Token): Future[Erc20Token]", "member" : "com.clluc.stockmind.port.secondary.Erc20InfoPort.createEthereumToken", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20InfoPort.html#createEthereumToken(token:com.clluc.stockmind.core.ethereum.Erc20Token):scala.concurrent.Future[com.clluc.stockmind.core.ethereum.Erc20Token]", "kind" : "abstract def"}, {"label" : "findAllEthereumTokens", "tail" : "(): Future[List[Erc20Token]]", "member" : "com.clluc.stockmind.port.secondary.Erc20InfoPort.findAllEthereumTokens", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20InfoPort.html#findAllEthereumTokens():scala.concurrent.Future[List[com.clluc.stockmind.core.ethereum.Erc20Token]]", "kind" : "abstract def"}, {"label" : "findEthereumTokenByAddress", "tail" : "(contractAddress: Address): Future[Option[Erc20Token]]", "member" : "com.clluc.stockmind.port.secondary.Erc20InfoPort.findEthereumTokenByAddress", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20InfoPort.html#findEthereumTokenByAddress(contractAddress:com.clluc.stockmind.core.ethereum.solidity.Address):scala.concurrent.Future[Option[com.clluc.stockmind.core.ethereum.Erc20Token]]", "kind" : "abstract def"}, {"label" : "findBalanceByAddressAndEthereumToken", "tail" : "(ethAddress: Address, token: String): Future[Option[Balance]]", "member" : "com.clluc.stockmind.port.secondary.Erc20InfoPort.findBalanceByAddressAndEthereumToken", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20InfoPort.html#findBalanceByAddressAndEthereumToken(ethAddress:com.clluc.stockmind.core.ethereum.solidity.Address,token:String):scala.concurrent.Future[Option[com.clluc.stockmind.core.user.Balance]]", "kind" : "abstract def"}, {"label" : "findEthereumTokenByName", "tail" : "(name: String): Future[Option[Erc20Token]]", "member" : "com.clluc.stockmind.port.secondary.Erc20InfoPort.findEthereumTokenByName", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20InfoPort.html#findEthereumTokenByName(name:String):scala.concurrent.Future[Option[com.clluc.stockmind.core.ethereum.Erc20Token]]", "kind" : "abstract def"}, {"label" : "findEthereumTokenBySymbol", "tail" : "(symbol: String): Future[Option[Erc20Token]]", "member" : "com.clluc.stockmind.port.secondary.Erc20InfoPort.findEthereumTokenBySymbol", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20InfoPort.html#findEthereumTokenBySymbol(symbol:String):scala.concurrent.Future[Option[com.clluc.stockmind.core.ethereum.Erc20Token]]", "kind" : "abstract def"}, {"label" : "findBalancesForAddress", "tail" : "(ethAddress: Address): Future[List[Balance]]", "member" : "com.clluc.stockmind.port.secondary.Erc20InfoPort.findBalancesForAddress", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20InfoPort.html#findBalancesForAddress(ethAddress:com.clluc.stockmind.core.ethereum.solidity.Address):scala.concurrent.Future[List[com.clluc.stockmind.core.user.Balance]]", "kind" : "abstract def"}], "shortDescription" : "Port to retrieve information related to er20 token related entities.", "trait" : "com\/clluc\/stockmind\/port\/secondary\/Erc20InfoPort.html", "kind" : "trait"}, {"name" : "com.clluc.stockmind.port.secondary.Erc20TransferEventPort", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20TransferEventPort.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20TransferEventPort.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20TransferEventPort.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20TransferEventPort.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20TransferEventPort.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20TransferEventPort.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20TransferEventPort.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20TransferEventPort.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20TransferEventPort.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20TransferEventPort.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20TransferEventPort.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20TransferEventPort.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20TransferEventPort.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20TransferEventPort.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20TransferEventPort.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20TransferEventPort.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20TransferEventPort.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20TransferEventPort.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20TransferEventPort.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "find", "tail" : "(id: Long): Future[Option[TransferEvent]]", "member" : "com.clluc.stockmind.port.secondary.Erc20TransferEventPort.find", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20TransferEventPort.html#find(id:Long):scala.concurrent.Future[Option[com.clluc.stockmind.core.ethereum.TransferEvent]]", "kind" : "abstract def"}, {"label" : "findTransfersInvolvingAddressPage", "tail" : "(address: Address, limit: Int, offset: Int): Future[List[TransferEvent]]", "member" : "com.clluc.stockmind.port.secondary.Erc20TransferEventPort.findTransfersInvolvingAddressPage", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20TransferEventPort.html#findTransfersInvolvingAddressPage(address:com.clluc.stockmind.core.ethereum.solidity.Address,limit:Int,offset:Int):scala.concurrent.Future[List[com.clluc.stockmind.core.ethereum.TransferEvent]]", "kind" : "abstract def"}, {"label" : "findTransfersInvolvingAddress", "tail" : "(address: Address): Future[List[TransferEvent]]", "member" : "com.clluc.stockmind.port.secondary.Erc20TransferEventPort.findTransfersInvolvingAddress", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20TransferEventPort.html#findTransfersInvolvingAddress(address:com.clluc.stockmind.core.ethereum.solidity.Address):scala.concurrent.Future[List[com.clluc.stockmind.core.ethereum.TransferEvent]]", "kind" : "abstract def"}, {"label" : "createTransferEvent", "tail" : "(transferEvent: TransferEvent): Future[TransferEvent]", "member" : "com.clluc.stockmind.port.secondary.Erc20TransferEventPort.createTransferEvent", "link" : "com\/clluc\/stockmind\/port\/secondary\/Erc20TransferEventPort.html#createTransferEvent(transferEvent:com.clluc.stockmind.core.ethereum.TransferEvent):scala.concurrent.Future[com.clluc.stockmind.core.ethereum.TransferEvent]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/clluc\/stockmind\/port\/secondary\/Erc20TransferEventPort.html", "kind" : "trait"}, {"name" : "com.clluc.stockmind.port.secondary.EthereumAccountPort", "members_trait" : [{"label" : "doesEthereumAddressBelongToAStockmindUser", "tail" : "(address: Address)(executionContext: ExecutionContext): Future[Boolean]", "member" : "com.clluc.stockmind.port.secondary.EthereumAccountPort.doesEthereumAddressBelongToAStockmindUser", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumAccountPort.html#doesEthereumAddressBelongToAStockmindUser(address:com.clluc.stockmind.core.ethereum.solidity.Address)(implicitexecutionContext:scala.concurrent.ExecutionContext):scala.concurrent.Future[Boolean]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumAccountPort.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumAccountPort.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumAccountPort.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumAccountPort.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumAccountPort.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumAccountPort.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumAccountPort.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumAccountPort.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumAccountPort.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumAccountPort.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumAccountPort.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumAccountPort.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumAccountPort.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumAccountPort.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumAccountPort.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumAccountPort.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumAccountPort.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumAccountPort.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumAccountPort.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "accountFor", "tail" : "(userId: UUID): Future[(EthereumAccount, Boolean)]", "member" : "com.clluc.stockmind.port.secondary.EthereumAccountPort.accountFor", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumAccountPort.html#accountFor(userId:java.util.UUID):scala.concurrent.Future[(com.clluc.stockmind.core.ethereum.EthereumAccount,Boolean)]", "kind" : "abstract def"}, {"label" : "saveAccount", "tail" : "(userAccount: EthereumAccount): Future[EthereumAccount]", "member" : "com.clluc.stockmind.port.secondary.EthereumAccountPort.saveAccount", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumAccountPort.html#saveAccount(userAccount:com.clluc.stockmind.core.ethereum.EthereumAccount):scala.concurrent.Future[com.clluc.stockmind.core.ethereum.EthereumAccount]", "kind" : "abstract def"}, {"label" : "findAccountByAddress", "tail" : "(address: Address): Future[Option[EthereumAccount]]", "member" : "com.clluc.stockmind.port.secondary.EthereumAccountPort.findAccountByAddress", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumAccountPort.html#findAccountByAddress(address:com.clluc.stockmind.core.ethereum.solidity.Address):scala.concurrent.Future[Option[com.clluc.stockmind.core.ethereum.EthereumAccount]]", "kind" : "abstract def"}, {"label" : "findAccountByUserId", "tail" : "(user: UUID): Future[Option[EthereumAccount]]", "member" : "com.clluc.stockmind.port.secondary.EthereumAccountPort.findAccountByUserId", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumAccountPort.html#findAccountByUserId(user:java.util.UUID):scala.concurrent.Future[Option[com.clluc.stockmind.core.ethereum.EthereumAccount]]", "kind" : "abstract def"}], "shortDescription" : "Secondary port that defines the contract we need to retrieve information from an Ethereum account.", "trait" : "com\/clluc\/stockmind\/port\/secondary\/EthereumAccountPort.html", "kind" : "trait"}, {"name" : "com.clluc.stockmind.port.secondary.EthereumClientPort", "members_trait" : [{"label" : "sendEther", "tail" : "(from: Address, to: Address, amountInWei: BigInt, password: String): Future[JsonRpcPlainResult]", "member" : "com.clluc.stockmind.port.secondary.EthereumClientPort.sendEther", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html#sendEther(from:com.clluc.stockmind.core.ethereum.solidity.Address,to:com.clluc.stockmind.core.ethereum.solidity.Address,amountInWei:BigInt,password:String):scala.concurrent.Future[com.clluc.stockmind.core.ethereum.JsonRpcResponse.JsonRpcPlainResult]", "kind" : "def"}, {"label" : "createAccountGeneratingPassword", "tail" : "(): Future[JsonRpcNewEthereumAccount]", "member" : "com.clluc.stockmind.port.secondary.EthereumClientPort.createAccountGeneratingPassword", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html#createAccountGeneratingPassword():scala.concurrent.Future[com.clluc.stockmind.core.ethereum.JsonRpcResponse.JsonRpcNewEthereumAccount]", "kind" : "final def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "defaultRightStatusCode", "tail" : "(): Int", "member" : "com.clluc.stockmind.port.secondary.EthereumClientPort.defaultRightStatusCode", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html#defaultRightStatusCode:Int", "kind" : "abstract def"}, {"label" : "findBlockTransactionsByNumber", "tail" : "(blockNumber: Block): Future[EthereumResponse[Option[List[Transaction]]]]", "member" : "com.clluc.stockmind.port.secondary.EthereumClientPort.findBlockTransactionsByNumber", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html#findBlockTransactionsByNumber(blockNumber:com.clluc.stockmind.core.ethereum.Block):scala.concurrent.Future[com.clluc.stockmind.core.ethereum.JsonRpcResponse.EthereumResponse[Option[List[com.clluc.stockmind.core.ethereum.Transaction]]]]", "kind" : "abstract def"}, {"label" : "getLoggedEvents", "tail" : "(filter: EthFilter): Future[JsonRpcLoggedEvents]", "member" : "com.clluc.stockmind.port.secondary.EthereumClientPort.getLoggedEvents", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html#getLoggedEvents(filter:com.clluc.stockmind.core.ethereum.EthFilter):scala.concurrent.Future[com.clluc.stockmind.core.ethereum.JsonRpcResponse.JsonRpcLoggedEvents]", "kind" : "abstract def"}, {"label" : "callMethod", "tail" : "(call: EthCall): Future[JsonRpcPlainResult]", "member" : "com.clluc.stockmind.port.secondary.EthereumClientPort.callMethod", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html#callMethod(call:com.clluc.stockmind.core.ethereum.EthCall):scala.concurrent.Future[com.clluc.stockmind.core.ethereum.JsonRpcResponse.JsonRpcPlainResult]", "kind" : "abstract def"}, {"label" : "sendTransaction", "tail" : "(signableTx: SignableTransaction): Future[JsonRpcPlainResult]", "member" : "com.clluc.stockmind.port.secondary.EthereumClientPort.sendTransaction", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html#sendTransaction(signableTx:com.clluc.stockmind.core.ethereum.SignableTransaction):scala.concurrent.Future[com.clluc.stockmind.core.ethereum.JsonRpcResponse.JsonRpcPlainResult]", "kind" : "abstract def"}, {"label" : "signMessage", "tail" : "(account: Address, message: String): Future[JsonRpcPlainResult]", "member" : "com.clluc.stockmind.port.secondary.EthereumClientPort.signMessage", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html#signMessage(account:com.clluc.stockmind.core.ethereum.solidity.Address,message:String):scala.concurrent.Future[com.clluc.stockmind.core.ethereum.JsonRpcResponse.JsonRpcPlainResult]", "kind" : "abstract def"}, {"label" : "findEthereumBlockNumber", "tail" : "(): Future[JsonRpcPlainResult]", "member" : "com.clluc.stockmind.port.secondary.EthereumClientPort.findEthereumBlockNumber", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html#findEthereumBlockNumber():scala.concurrent.Future[com.clluc.stockmind.core.ethereum.JsonRpcResponse.JsonRpcPlainResult]", "kind" : "abstract def"}, {"label" : "findBalanceForAccount", "tail" : "(account: Address): Future[JsonRpcBalance]", "member" : "com.clluc.stockmind.port.secondary.EthereumClientPort.findBalanceForAccount", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html#findBalanceForAccount(account:com.clluc.stockmind.core.ethereum.solidity.Address):scala.concurrent.Future[com.clluc.stockmind.core.ethereum.JsonRpcResponse.JsonRpcBalance]", "kind" : "abstract def"}, {"label" : "createAccountWithPassword", "tail" : "(password: String): Future[JsonRpcPlainResult]", "member" : "com.clluc.stockmind.port.secondary.EthereumClientPort.createAccountWithPassword", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html#createAccountWithPassword(password:String):scala.concurrent.Future[com.clluc.stockmind.core.ethereum.JsonRpcResponse.JsonRpcPlainResult]", "kind" : "abstract def"}, {"label" : "ec", "tail" : "(): ExecutionContext", "member" : "com.clluc.stockmind.port.secondary.EthereumClientPort.ec", "link" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html#ec:scala.concurrent.ExecutionContext", "kind" : "implicit abstract def"}], "shortDescription" : "", "trait" : "com\/clluc\/stockmind\/port\/secondary\/EthereumClientPort.html", "kind" : "trait"}, {"name" : "com.clluc.stockmind.port.secondary.InboundTransferPort", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/port\/secondary\/InboundTransferPort.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/port\/secondary\/InboundTransferPort.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/port\/secondary\/InboundTransferPort.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/port\/secondary\/InboundTransferPort.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/port\/secondary\/InboundTransferPort.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/port\/secondary\/InboundTransferPort.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/port\/secondary\/InboundTransferPort.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/InboundTransferPort.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/InboundTransferPort.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/InboundTransferPort.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/port\/secondary\/InboundTransferPort.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/port\/secondary\/InboundTransferPort.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/port\/secondary\/InboundTransferPort.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/port\/secondary\/InboundTransferPort.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/port\/secondary\/InboundTransferPort.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/port\/secondary\/InboundTransferPort.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/port\/secondary\/InboundTransferPort.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/InboundTransferPort.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/InboundTransferPort.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "findBySecondStep", "tail" : "(stepTxHash: String): Future[Option[InboundTransfer]]", "member" : "com.clluc.stockmind.port.secondary.InboundTransferPort.findBySecondStep", "link" : "com\/clluc\/stockmind\/port\/secondary\/InboundTransferPort.html#findBySecondStep(stepTxHash:String):scala.concurrent.Future[Option[com.clluc.stockmind.core.transaction.InboundTransfer]]", "kind" : "abstract def"}, {"label" : "findByFirstStep", "tail" : "(stepId: Long): Future[Option[InboundTransfer]]", "member" : "com.clluc.stockmind.port.secondary.InboundTransferPort.findByFirstStep", "link" : "com\/clluc\/stockmind\/port\/secondary\/InboundTransferPort.html#findByFirstStep(stepId:Long):scala.concurrent.Future[Option[com.clluc.stockmind.core.transaction.InboundTransfer]]", "kind" : "abstract def"}, {"label" : "create", "tail" : "(it: InboundTransfer): Future[InboundTransfer]", "member" : "com.clluc.stockmind.port.secondary.InboundTransferPort.create", "link" : "com\/clluc\/stockmind\/port\/secondary\/InboundTransferPort.html#create(it:com.clluc.stockmind.core.transaction.InboundTransfer):scala.concurrent.Future[com.clluc.stockmind.core.transaction.InboundTransfer]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/clluc\/stockmind\/port\/secondary\/InboundTransferPort.html", "kind" : "trait"}, {"name" : "com.clluc.stockmind.port.secondary.Oauth1InfoPort", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/port\/secondary\/Oauth1InfoPort.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/port\/secondary\/Oauth1InfoPort.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/port\/secondary\/Oauth1InfoPort.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/port\/secondary\/Oauth1InfoPort.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/port\/secondary\/Oauth1InfoPort.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/port\/secondary\/Oauth1InfoPort.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/port\/secondary\/Oauth1InfoPort.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/Oauth1InfoPort.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/Oauth1InfoPort.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/Oauth1InfoPort.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/port\/secondary\/Oauth1InfoPort.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/port\/secondary\/Oauth1InfoPort.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/port\/secondary\/Oauth1InfoPort.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/port\/secondary\/Oauth1InfoPort.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/port\/secondary\/Oauth1InfoPort.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/port\/secondary\/Oauth1InfoPort.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/port\/secondary\/Oauth1InfoPort.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/Oauth1InfoPort.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/Oauth1InfoPort.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "saveOauthInfo", "tail" : "(loginInfo: LoginInfo, authInfo: OAuth1Info): Future[OAuth1Info]", "member" : "com.clluc.stockmind.port.secondary.Oauth1InfoPort.saveOauthInfo", "link" : "com\/clluc\/stockmind\/port\/secondary\/Oauth1InfoPort.html#saveOauthInfo(loginInfo:com.clluc.stockmind.core.oauth.LoginInfo,authInfo:com.clluc.stockmind.core.oauth.OAuth1Info):scala.concurrent.Future[com.clluc.stockmind.core.oauth.OAuth1Info]", "kind" : "abstract def"}, {"label" : "findByProviderIdAndKey", "tail" : "(loginInfo: LoginInfo): Future[Option[OAuth1Info]]", "member" : "com.clluc.stockmind.port.secondary.Oauth1InfoPort.findByProviderIdAndKey", "link" : "com\/clluc\/stockmind\/port\/secondary\/Oauth1InfoPort.html#findByProviderIdAndKey(loginInfo:com.clluc.stockmind.core.oauth.LoginInfo):scala.concurrent.Future[Option[com.clluc.stockmind.core.oauth.OAuth1Info]]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/clluc\/stockmind\/port\/secondary\/Oauth1InfoPort.html", "kind" : "trait"}, {"name" : "com.clluc.stockmind.port.secondary.OffchainBalancePort", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffchainBalancePort.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffchainBalancePort.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffchainBalancePort.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffchainBalancePort.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffchainBalancePort.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffchainBalancePort.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffchainBalancePort.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffchainBalancePort.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffchainBalancePort.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffchainBalancePort.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffchainBalancePort.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffchainBalancePort.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffchainBalancePort.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffchainBalancePort.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffchainBalancePort.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffchainBalancePort.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffchainBalancePort.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffchainBalancePort.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffchainBalancePort.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "findBalanceByAddressAndEthereumToken", "tail" : "(ethAddress: Address, tokenSymbol: String): Future[Option[Balance]]", "member" : "com.clluc.stockmind.port.secondary.OffchainBalancePort.findBalanceByAddressAndEthereumToken", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffchainBalancePort.html#findBalanceByAddressAndEthereumToken(ethAddress:com.clluc.stockmind.core.ethereum.solidity.Address,tokenSymbol:String):scala.concurrent.Future[Option[com.clluc.stockmind.core.user.Balance]]", "kind" : "abstract def"}, {"label" : "findBalancesForAddress", "tail" : "(ethAddress: Address): Future[List[Balance]]", "member" : "com.clluc.stockmind.port.secondary.OffchainBalancePort.findBalancesForAddress", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffchainBalancePort.html#findBalancesForAddress(ethAddress:com.clluc.stockmind.core.ethereum.solidity.Address):scala.concurrent.Future[List[com.clluc.stockmind.core.user.Balance]]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/clluc\/stockmind\/port\/secondary\/OffchainBalancePort.html", "kind" : "trait"}, {"name" : "com.clluc.stockmind.port.secondary.OffChainTransferPort", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffChainTransferPort.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffChainTransferPort.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffChainTransferPort.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffChainTransferPort.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffChainTransferPort.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffChainTransferPort.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffChainTransferPort.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffChainTransferPort.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffChainTransferPort.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffChainTransferPort.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffChainTransferPort.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffChainTransferPort.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffChainTransferPort.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffChainTransferPort.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffChainTransferPort.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffChainTransferPort.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffChainTransferPort.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffChainTransferPort.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffChainTransferPort.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "linkToOnChainTxWithId", "tail" : "(offchainTxId: Long, onchainTxId: Long): Future[OffChainTransfer]", "member" : "com.clluc.stockmind.port.secondary.OffChainTransferPort.linkToOnChainTxWithId", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffChainTransferPort.html#linkToOnChainTxWithId(offchainTxId:Long,onchainTxId:Long):scala.concurrent.Future[com.clluc.stockmind.core.transaction.OffChainTransfer]", "kind" : "abstract def"}, {"label" : "find", "tail" : "(id: Long): Future[Option[OffChainTransfer]]", "member" : "com.clluc.stockmind.port.secondary.OffChainTransferPort.find", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffChainTransferPort.html#find(id:Long):scala.concurrent.Future[Option[com.clluc.stockmind.core.transaction.OffChainTransfer]]", "kind" : "abstract def"}, {"label" : "findTransfersInvolvingAddressPage", "tail" : "(address: Address, limit: Int, offset: Int): Future[List[OffChainTransfer]]", "member" : "com.clluc.stockmind.port.secondary.OffChainTransferPort.findTransfersInvolvingAddressPage", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffChainTransferPort.html#findTransfersInvolvingAddressPage(address:com.clluc.stockmind.core.ethereum.solidity.Address,limit:Int,offset:Int):scala.concurrent.Future[List[com.clluc.stockmind.core.transaction.OffChainTransfer]]", "kind" : "abstract def"}, {"label" : "findTransfersInvolvingAddress", "tail" : "(address: Address): Future[List[OffChainTransfer]]", "member" : "com.clluc.stockmind.port.secondary.OffChainTransferPort.findTransfersInvolvingAddress", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffChainTransferPort.html#findTransfersInvolvingAddress(address:com.clluc.stockmind.core.ethereum.solidity.Address):scala.concurrent.Future[List[com.clluc.stockmind.core.transaction.OffChainTransfer]]", "kind" : "abstract def"}, {"label" : "create", "tail" : "(tx: OffChainTransfer): Future[OffChainTransfer]", "member" : "com.clluc.stockmind.port.secondary.OffChainTransferPort.create", "link" : "com\/clluc\/stockmind\/port\/secondary\/OffChainTransferPort.html#create(tx:com.clluc.stockmind.core.transaction.OffChainTransfer):scala.concurrent.Future[com.clluc.stockmind.core.transaction.OffChainTransfer]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/clluc\/stockmind\/port\/secondary\/OffChainTransferPort.html", "kind" : "trait"}, {"name" : "com.clluc.stockmind.port.secondary.OutboundTransferPort", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/port\/secondary\/OutboundTransferPort.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/port\/secondary\/OutboundTransferPort.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/port\/secondary\/OutboundTransferPort.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/port\/secondary\/OutboundTransferPort.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/port\/secondary\/OutboundTransferPort.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/port\/secondary\/OutboundTransferPort.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/port\/secondary\/OutboundTransferPort.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/OutboundTransferPort.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/OutboundTransferPort.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/OutboundTransferPort.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/port\/secondary\/OutboundTransferPort.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/port\/secondary\/OutboundTransferPort.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/port\/secondary\/OutboundTransferPort.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/port\/secondary\/OutboundTransferPort.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/port\/secondary\/OutboundTransferPort.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/port\/secondary\/OutboundTransferPort.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/port\/secondary\/OutboundTransferPort.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/OutboundTransferPort.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/OutboundTransferPort.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "findByTxHash", "tail" : "(txHash: EthereumHash): Future[Option[OutboundTransfer]]", "member" : "com.clluc.stockmind.port.secondary.OutboundTransferPort.findByTxHash", "link" : "com\/clluc\/stockmind\/port\/secondary\/OutboundTransferPort.html#findByTxHash(txHash:com.clluc.stockmind.core.ethereum.EthereumHash):scala.concurrent.Future[Option[com.clluc.stockmind.core.transaction.OutboundTransfer]]", "kind" : "abstract def"}, {"label" : "create", "tail" : "(ot: OutboundTransfer): Future[OutboundTransfer]", "member" : "com.clluc.stockmind.port.secondary.OutboundTransferPort.create", "link" : "com\/clluc\/stockmind\/port\/secondary\/OutboundTransferPort.html#create(ot:com.clluc.stockmind.core.transaction.OutboundTransfer):scala.concurrent.Future[com.clluc.stockmind.core.transaction.OutboundTransfer]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/clluc\/stockmind\/port\/secondary\/OutboundTransferPort.html", "kind" : "trait"}, {"name" : "com.clluc.stockmind.port.secondary.PendingTransferPort", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/port\/secondary\/PendingTransferPort.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/port\/secondary\/PendingTransferPort.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/port\/secondary\/PendingTransferPort.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/port\/secondary\/PendingTransferPort.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/port\/secondary\/PendingTransferPort.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/port\/secondary\/PendingTransferPort.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/port\/secondary\/PendingTransferPort.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/PendingTransferPort.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/PendingTransferPort.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/PendingTransferPort.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/port\/secondary\/PendingTransferPort.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/port\/secondary\/PendingTransferPort.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/port\/secondary\/PendingTransferPort.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/port\/secondary\/PendingTransferPort.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/port\/secondary\/PendingTransferPort.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/port\/secondary\/PendingTransferPort.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/port\/secondary\/PendingTransferPort.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/PendingTransferPort.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/PendingTransferPort.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "delete", "tail" : "(id: Long): Future[Unit]", "member" : "com.clluc.stockmind.port.secondary.PendingTransferPort.delete", "link" : "com\/clluc\/stockmind\/port\/secondary\/PendingTransferPort.html#delete(id:Long):scala.concurrent.Future[Unit]", "kind" : "abstract def"}, {"label" : "markAsProcessed", "tail" : "(id: Long, timestamp: DateTime): Future[PendingTransfer]", "member" : "com.clluc.stockmind.port.secondary.PendingTransferPort.markAsProcessed", "link" : "com\/clluc\/stockmind\/port\/secondary\/PendingTransferPort.html#markAsProcessed(id:Long,timestamp:org.joda.time.DateTime):scala.concurrent.Future[com.clluc.stockmind.core.transaction.PendingTransfer]", "kind" : "abstract def"}, {"label" : "findPendingByDestination", "tail" : "(loginInfo: LoginInfo): Future[List[PendingTransfer]]", "member" : "com.clluc.stockmind.port.secondary.PendingTransferPort.findPendingByDestination", "link" : "com\/clluc\/stockmind\/port\/secondary\/PendingTransferPort.html#findPendingByDestination(loginInfo:com.clluc.stockmind.core.oauth.LoginInfo):scala.concurrent.Future[List[com.clluc.stockmind.core.transaction.PendingTransfer]]", "kind" : "abstract def"}, {"label" : "findPendingByOrigin", "tail" : "(userId: UUID): Future[List[PendingTransfer]]", "member" : "com.clluc.stockmind.port.secondary.PendingTransferPort.findPendingByOrigin", "link" : "com\/clluc\/stockmind\/port\/secondary\/PendingTransferPort.html#findPendingByOrigin(userId:java.util.UUID):scala.concurrent.Future[List[com.clluc.stockmind.core.transaction.PendingTransfer]]", "kind" : "abstract def"}, {"label" : "findByOrigin", "tail" : "(userId: UUID): Future[List[PendingTransfer]]", "member" : "com.clluc.stockmind.port.secondary.PendingTransferPort.findByOrigin", "link" : "com\/clluc\/stockmind\/port\/secondary\/PendingTransferPort.html#findByOrigin(userId:java.util.UUID):scala.concurrent.Future[List[com.clluc.stockmind.core.transaction.PendingTransfer]]", "kind" : "abstract def"}, {"label" : "findById", "tail" : "(id: Long): Future[Option[PendingTransfer]]", "member" : "com.clluc.stockmind.port.secondary.PendingTransferPort.findById", "link" : "com\/clluc\/stockmind\/port\/secondary\/PendingTransferPort.html#findById(id:Long):scala.concurrent.Future[Option[com.clluc.stockmind.core.transaction.PendingTransfer]]", "kind" : "abstract def"}, {"label" : "create", "tail" : "(transfer: PendingTransfer): Future[PendingTransfer]", "member" : "com.clluc.stockmind.port.secondary.PendingTransferPort.create", "link" : "com\/clluc\/stockmind\/port\/secondary\/PendingTransferPort.html#create(transfer:com.clluc.stockmind.core.transaction.PendingTransfer):scala.concurrent.Future[com.clluc.stockmind.core.transaction.PendingTransfer]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/clluc\/stockmind\/port\/secondary\/PendingTransferPort.html", "kind" : "trait"}, {"name" : "com.clluc.stockmind.port.secondary.SettleTransferPort", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/port\/secondary\/SettleTransferPort.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/port\/secondary\/SettleTransferPort.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/port\/secondary\/SettleTransferPort.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/port\/secondary\/SettleTransferPort.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/port\/secondary\/SettleTransferPort.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/port\/secondary\/SettleTransferPort.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/port\/secondary\/SettleTransferPort.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/SettleTransferPort.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/SettleTransferPort.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/SettleTransferPort.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/port\/secondary\/SettleTransferPort.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/port\/secondary\/SettleTransferPort.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/port\/secondary\/SettleTransferPort.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/port\/secondary\/SettleTransferPort.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/port\/secondary\/SettleTransferPort.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/port\/secondary\/SettleTransferPort.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/port\/secondary\/SettleTransferPort.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/SettleTransferPort.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/SettleTransferPort.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "settlePendingTransfer", "tail" : "(pendingTransferId: Long, transfer: OffChainTransfer): Future[Unit]", "member" : "com.clluc.stockmind.port.secondary.SettleTransferPort.settlePendingTransfer", "link" : "com\/clluc\/stockmind\/port\/secondary\/SettleTransferPort.html#settlePendingTransfer(pendingTransferId:Long,transfer:com.clluc.stockmind.core.transaction.OffChainTransfer):scala.concurrent.Future[Unit]", "kind" : "abstract def"}], "shortDescription" : "TODO Add Scaladoc.", "trait" : "com\/clluc\/stockmind\/port\/secondary\/SettleTransferPort.html", "kind" : "trait"}, {"name" : "com.clluc.stockmind.port.secondary.TwitterAccountPort", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterAccountPort.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterAccountPort.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterAccountPort.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterAccountPort.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterAccountPort.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterAccountPort.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterAccountPort.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterAccountPort.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterAccountPort.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterAccountPort.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterAccountPort.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterAccountPort.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterAccountPort.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterAccountPort.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterAccountPort.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterAccountPort.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterAccountPort.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterAccountPort.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterAccountPort.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "saveTwitterAccount", "tail" : "(twitterAccount: TwitterAccount): Future[TwitterAccount]", "member" : "com.clluc.stockmind.port.secondary.TwitterAccountPort.saveTwitterAccount", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterAccountPort.html#saveTwitterAccount(twitterAccount:com.clluc.stockmind.core.twitter.TwitterAccount):scala.concurrent.Future[com.clluc.stockmind.core.twitter.TwitterAccount]", "kind" : "abstract def"}, {"label" : "findTwitterAccountByScreenName", "tail" : "(screenName: String): Future[Option[TwitterAccount]]", "member" : "com.clluc.stockmind.port.secondary.TwitterAccountPort.findTwitterAccountByScreenName", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterAccountPort.html#findTwitterAccountByScreenName(screenName:String):scala.concurrent.Future[Option[com.clluc.stockmind.core.twitter.TwitterAccount]]", "kind" : "abstract def"}, {"label" : "findAllScreenNames", "tail" : "(): Future[List[String]]", "member" : "com.clluc.stockmind.port.secondary.TwitterAccountPort.findAllScreenNames", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterAccountPort.html#findAllScreenNames():scala.concurrent.Future[List[String]]", "kind" : "abstract def"}, {"label" : "findAccountById", "tail" : "(userID: UUID): Future[Option[TwitterAccount]]", "member" : "com.clluc.stockmind.port.secondary.TwitterAccountPort.findAccountById", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterAccountPort.html#findAccountById(userID:java.util.UUID):scala.concurrent.Future[Option[com.clluc.stockmind.core.twitter.TwitterAccount]]", "kind" : "abstract def"}], "shortDescription" : "Secondary port that defines the contract we need to retrieve information from any user Twitter account.", "trait" : "com\/clluc\/stockmind\/port\/secondary\/TwitterAccountPort.html", "kind" : "trait"}, {"name" : "com.clluc.stockmind.port.secondary.TwitterPort", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterPort.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterPort.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterPort.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterPort.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterPort.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterPort.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterPort.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterPort.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterPort.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterPort.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterPort.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterPort.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterPort.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterPort.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterPort.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterPort.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterPort.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterPort.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterPort.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "sendTweet", "tail" : "(message: String)(userCredentials: OAuth1Info): Future[Long]", "member" : "com.clluc.stockmind.port.secondary.TwitterPort.sendTweet", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterPort.html#sendTweet(message:String)(userCredentials:com.clluc.stockmind.core.oauth.OAuth1Info):scala.concurrent.Future[Long]", "kind" : "abstract def"}, {"label" : "findUsersInfoByQuery", "tail" : "(query: String, userCredentials: OAuth1Info): Future[List[TwitterUserSearchResult]]", "member" : "com.clluc.stockmind.port.secondary.TwitterPort.findUsersInfoByQuery", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterPort.html#findUsersInfoByQuery(query:String,userCredentials:com.clluc.stockmind.core.oauth.OAuth1Info):scala.concurrent.Future[List[com.clluc.stockmind.core.twitter.TwitterUserSearchResult]]", "kind" : "abstract def"}, {"label" : "findUserIdFromScreenName", "tail" : "(screenName: TwitterHandle, userCredentials: OAuth1Info): Future[Option[Long]]", "member" : "com.clluc.stockmind.port.secondary.TwitterPort.findUserIdFromScreenName", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterPort.html#findUserIdFromScreenName(screenName:com.clluc.stockmind.core.twitter.TwitterHandle,userCredentials:com.clluc.stockmind.core.oauth.OAuth1Info):scala.concurrent.Future[Option[Long]]", "kind" : "abstract def"}, {"label" : "findUserInfoByKey", "tail" : "(key: Long, userCredentials: OAuth1Info): Future[Option[TwitterUserInfo]]", "member" : "com.clluc.stockmind.port.secondary.TwitterPort.findUserInfoByKey", "link" : "com\/clluc\/stockmind\/port\/secondary\/TwitterPort.html#findUserInfoByKey(key:Long,userCredentials:com.clluc.stockmind.core.oauth.OAuth1Info):scala.concurrent.Future[Option[com.clluc.stockmind.core.twitter.TwitterUserInfo]]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/clluc\/stockmind\/port\/secondary\/TwitterPort.html", "kind" : "trait"}, {"name" : "com.clluc.stockmind.port.secondary.UserPort", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/port\/secondary\/UserPort.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/port\/secondary\/UserPort.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/port\/secondary\/UserPort.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/port\/secondary\/UserPort.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/port\/secondary\/UserPort.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/port\/secondary\/UserPort.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/port\/secondary\/UserPort.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/UserPort.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/UserPort.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/port\/secondary\/UserPort.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/port\/secondary\/UserPort.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/port\/secondary\/UserPort.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/port\/secondary\/UserPort.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/port\/secondary\/UserPort.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/port\/secondary\/UserPort.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/port\/secondary\/UserPort.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/port\/secondary\/UserPort.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/UserPort.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/port\/secondary\/UserPort.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "store", "tail" : "(user: User): Future[User]", "member" : "com.clluc.stockmind.port.secondary.UserPort.store", "link" : "com\/clluc\/stockmind\/port\/secondary\/UserPort.html#store(user:com.clluc.stockmind.core.user.User):scala.concurrent.Future[com.clluc.stockmind.core.user.User]", "kind" : "abstract def"}, {"label" : "save", "tail" : "(user: User): Future[User]", "member" : "com.clluc.stockmind.port.secondary.UserPort.save", "link" : "com\/clluc\/stockmind\/port\/secondary\/UserPort.html#save(user:com.clluc.stockmind.core.user.User):scala.concurrent.Future[com.clluc.stockmind.core.user.User]", "kind" : "abstract def"}, {"label" : "findByLoginKey", "tail" : "(loginKey: String): Future[Option[User]]", "member" : "com.clluc.stockmind.port.secondary.UserPort.findByLoginKey", "link" : "com\/clluc\/stockmind\/port\/secondary\/UserPort.html#findByLoginKey(loginKey:String):scala.concurrent.Future[Option[com.clluc.stockmind.core.user.User]]", "kind" : "abstract def"}, {"label" : "find", "tail" : "(userID: UUID): Future[Option[User]]", "member" : "com.clluc.stockmind.port.secondary.UserPort.find", "link" : "com\/clluc\/stockmind\/port\/secondary\/UserPort.html#find(userID:java.util.UUID):scala.concurrent.Future[Option[com.clluc.stockmind.core.user.User]]", "kind" : "abstract def"}, {"label" : "retrieve", "tail" : "(loginInfo: LoginInfo): Future[Option[User]]", "member" : "com.clluc.stockmind.port.secondary.UserPort.retrieve", "link" : "com\/clluc\/stockmind\/port\/secondary\/UserPort.html#retrieve(loginInfo:com.clluc.stockmind.core.oauth.LoginInfo):scala.concurrent.Future[Option[com.clluc.stockmind.core.user.User]]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/clluc\/stockmind\/port\/secondary\/UserPort.html", "kind" : "trait"}]};