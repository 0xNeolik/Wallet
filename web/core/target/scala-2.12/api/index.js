Index.PACKAGES = {"com.clluc.stockmind.core" : [{"name" : "com.clluc.stockmind.core.BootstrapAdapter", "shortDescription" : "", "object" : "com\/clluc\/stockmind\/core\/BootstrapAdapter$.html", "members_object" : [{"label" : "apply", "tail" : "(erc20InfoPort: Erc20InfoPort, erc20TransferEventPort: Erc20TransferEventPort, ethereumAccountPort: EthereumAccountPort, appConfigPort: AppConfigPort, offchainTransferPort: OffChainTransferPort, inboundTransferPort: InboundTransferPort, outboundTransferPort: OutboundTransferPort, ethereumClientPort: EthereumClientPort, conf: BootstrapConfigurationDependencies, timestamp: ⇒ DateTime)(system: ActorSystem, executionContext: ExecutionContext): BootstrapAdapter", "member" : "com.clluc.stockmind.core.BootstrapAdapter.apply", "link" : "com\/clluc\/stockmind\/core\/BootstrapAdapter$.html#apply(erc20InfoPort:com.clluc.stockmind.port.secondary.Erc20InfoPort,erc20TransferEventPort:com.clluc.stockmind.port.secondary.Erc20TransferEventPort,ethereumAccountPort:com.clluc.stockmind.port.secondary.EthereumAccountPort,appConfigPort:com.clluc.stockmind.port.secondary.AppConfigPort,offchainTransferPort:com.clluc.stockmind.port.secondary.OffChainTransferPort,inboundTransferPort:com.clluc.stockmind.port.secondary.InboundTransferPort,outboundTransferPort:com.clluc.stockmind.port.secondary.OutboundTransferPort,ethereumClientPort:com.clluc.stockmind.port.secondary.EthereumClientPort,conf:com.clluc.stockmind.core.Bootstrap.BootstrapConfigurationDependencies,timestamp:=>org.joda.time.DateTime)(implicitsystem:akka.actor.ActorSystem,implicitexecutionContext:scala.concurrent.ExecutionContext):com.clluc.stockmind.core.BootstrapAdapter", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/core\/BootstrapAdapter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/core\/BootstrapAdapter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/core\/BootstrapAdapter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/core\/BootstrapAdapter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/core\/BootstrapAdapter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/core\/BootstrapAdapter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/core\/BootstrapAdapter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/BootstrapAdapter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/BootstrapAdapter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/BootstrapAdapter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/core\/BootstrapAdapter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/core\/BootstrapAdapter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/core\/BootstrapAdapter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/core\/BootstrapAdapter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/core\/BootstrapAdapter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/core\/BootstrapAdapter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/core\/BootstrapAdapter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/core\/BootstrapAdapter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/core\/BootstrapAdapter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.clluc.stockmind.core.transaction.transfer" : [{"name" : "com.clluc.stockmind.core.transaction.transfer.PendingTransfersAdapter", "shortDescription" : "TODO Add Scaladoc.", "members_class" : [{"label" : "settlePendingTransfers", "tail" : "(oauthProvider: String, destinationUserKey: String)(timestampFx: ⇒ DateTime): Future[List[ValidatedTransaction[Future[Unit]]]]", "member" : "com.clluc.stockmind.core.transaction.transfer.PendingTransfersAdapter.settlePendingTransfers", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#settlePendingTransfers(oauthProvider:String,destinationUserKey:String)(timestampFx:=>org.joda.time.DateTime):scala.concurrent.Future[List[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[scala.concurrent.Future[Unit]]]]", "kind" : "def"}, {"member" : "com.clluc.stockmind.core.transaction.transfer.PendingTransfersAdapter#<init>", "error" : "unsupported entity"}, {"label" : "settleTransfersYetPending", "tail" : "(oauthProvider: String, destinationUserKey: String)(timestampFx: ⇒ DateTime)(arg0: Monad[P], arg1: TokenTransactionOps[P]): P[List[ValidatedTransaction[P[Unit]]]]", "member" : "com.clluc.stockmind.core.transaction.transfer.SettlePendingTransfersLogic.settleTransfersYetPending", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#settleTransfersYetPending[P[_]](oauthProvider:String,destinationUserKey:String)(timestampFx:=>org.joda.time.DateTime)(implicitevidence$3:cats.Monad[P],implicitevidence$4:com.clluc.stockmind.core.tokens.TokenTransactionOps[P]):P[List[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[P[Unit]]]]", "kind" : "def"}, {"label" : "findPendingTransfers", "tail" : "(oauthProvider: String, destinationUserKey: String)(timestampFx: ⇒ DateTime)(arg0: Monad[P], arg1: TokenTransactionOps[P]): P[List[ValidatedTransaction[(PendingTransfer, OffChainTransfer)]]]", "member" : "com.clluc.stockmind.core.transaction.transfer.SettlePendingTransfersLogic.findPendingTransfers", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#findPendingTransfers[P[_]](oauthProvider:String,destinationUserKey:String)(timestampFx:=>org.joda.time.DateTime)(implicitevidence$1:cats.Monad[P],implicitevidence$2:com.clluc.stockmind.core.tokens.TokenTransactionOps[P]):P[List[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[(com.clluc.stockmind.core.transaction.PendingTransfer,com.clluc.stockmind.core.transaction.OffChainTransfer)]]]", "kind" : "def"}, {"label" : "twitterAccountByUserIdPredicate", "tail" : "(userId: UUID)(arg0: TokenTransactionOps[P], arg1: Functor[P]): P[ValidatedTransaction[TwitterAccount]]", "member" : "com.clluc.stockmind.core.transaction.ValidatedTransactionLogic.twitterAccountByUserIdPredicate", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#twitterAccountByUserIdPredicate[P[_]](userId:java.util.UUID)(implicitevidence$27:com.clluc.stockmind.core.tokens.TokenTransactionOps[P],implicitevidence$28:cats.Functor[P]):P[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[com.clluc.stockmind.core.twitter.TwitterAccount]]", "kind" : "def"}, {"label" : "omnibusAccountPredicate", "tail" : "(address: Address)(arg0: TokenTransactionOps[P], arg1: Functor[P]): P[ValidatedTransaction[Address]]", "member" : "com.clluc.stockmind.core.transaction.ValidatedTransactionLogic.omnibusAccountPredicate", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#omnibusAccountPredicate[P[_]](address:com.clluc.stockmind.core.ethereum.solidity.Address)(implicitevidence$25:com.clluc.stockmind.core.tokens.TokenTransactionOps[P],implicitevidence$26:cats.Functor[P]):P[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[com.clluc.stockmind.core.ethereum.solidity.Address]]", "kind" : "def"}, {"label" : "twitterApiUserIdPredicate", "tail" : "(screenName: TwitterHandle)(twitterUserCredentials: OAuth1Info)(arg0: TokenTransactionOps[P], arg1: Functor[P]): P[ValidatedTransaction[Long]]", "member" : "com.clluc.stockmind.core.transaction.ValidatedTransactionLogic.twitterApiUserIdPredicate", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#twitterApiUserIdPredicate[P[_]](screenName:com.clluc.stockmind.core.twitter.TwitterHandle)(twitterUserCredentials:com.clluc.stockmind.core.oauth.OAuth1Info)(implicitevidence$23:com.clluc.stockmind.core.tokens.TokenTransactionOps[P],implicitevidence$24:cats.Functor[P]):P[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[Long]]", "kind" : "def"}, {"label" : "oauth1InfoPredicate", "tail" : "(user: User)(arg0: TokenTransactionOps[P], arg1: Functor[P]): P[ValidatedTransaction[OAuth1Info]]", "member" : "com.clluc.stockmind.core.transaction.ValidatedTransactionLogic.oauth1InfoPredicate", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#oauth1InfoPredicate[P[_]](user:com.clluc.stockmind.core.user.User)(implicitevidence$21:com.clluc.stockmind.core.tokens.TokenTransactionOps[P],implicitevidence$22:cats.Functor[P]):P[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[com.clluc.stockmind.core.oauth.OAuth1Info]]", "kind" : "def"}, {"label" : "userIdFromOAuthProviderAndLoginKeyPredicate", "tail" : "(oauthProvider: String, key: String)(arg0: TokenTransactionOps[P], arg1: Functor[P]): P[ValidatedTransaction[UUID]]", "member" : "com.clluc.stockmind.core.transaction.ValidatedTransactionLogic.userIdFromOAuthProviderAndLoginKeyPredicate", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#userIdFromOAuthProviderAndLoginKeyPredicate[P[_]](oauthProvider:String,key:String)(implicitevidence$19:com.clluc.stockmind.core.tokens.TokenTransactionOps[P],implicitevidence$20:cats.Functor[P]):P[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[java.util.UUID]]", "kind" : "def"}, {"label" : "userPredicate", "tail" : "(id: UUID)(arg0: TokenTransactionOps[P], arg1: Functor[P]): P[ValidatedTransaction[User]]", "member" : "com.clluc.stockmind.core.transaction.ValidatedTransactionLogic.userPredicate", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#userPredicate[P[_]](id:java.util.UUID)(implicitevidence$17:com.clluc.stockmind.core.tokens.TokenTransactionOps[P],implicitevidence$18:cats.Functor[P]):P[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[com.clluc.stockmind.core.user.User]]", "kind" : "def"}, {"label" : "tokenBySymbolPredicate", "tail" : "(tokenSymbol: String)(arg0: Functor[P], arg1: TokenTransactionOps[P]): P[ValidatedTransaction[Erc20Token]]", "member" : "com.clluc.stockmind.core.transaction.ValidatedTransactionLogic.tokenBySymbolPredicate", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#tokenBySymbolPredicate[P[_]](tokenSymbol:String)(implicitevidence$15:cats.Functor[P],implicitevidence$16:com.clluc.stockmind.core.tokens.TokenTransactionOps[P]):P[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[com.clluc.stockmind.core.ethereum.Erc20Token]]", "kind" : "def"}, {"label" : "transactionSourceInfoPredicate", "tail" : "(tokenSymbol: String, transferSourceUserId: UUID, transferSourceTwitterScreenName: String, requestedAmountStr: String)(arg0: TokenTransactionOps[P], arg1: Monad[P]): P[ValidatedTransaction[TransactionSourceInfo]]", "member" : "com.clluc.stockmind.core.transaction.ValidatedTransactionLogic.transactionSourceInfoPredicate", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#transactionSourceInfoPredicate[P[_]](tokenSymbol:String,transferSourceUserId:java.util.UUID,transferSourceTwitterScreenName:String,requestedAmountStr:String)(implicitevidence$13:com.clluc.stockmind.core.tokens.TokenTransactionOps[P],implicitevidence$14:cats.Monad[P]):P[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[com.clluc.stockmind.core.transaction.TransactionSourceInfo]]", "kind" : "def"}, {"label" : "enoughBalancePredicate", "tail" : "(effectiveBalance: BigInt, transferSourceAddress: String, tokenSymbol: String, tokenDecimals: Int, requestedAmountAsString: String)(arg0: Applicative[P]): P[ValidatedTransaction[BigInt]]", "member" : "com.clluc.stockmind.core.transaction.ValidatedTransactionLogic.enoughBalancePredicate", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#enoughBalancePredicate[P[_]](effectiveBalance:BigInt,transferSourceAddress:String,tokenSymbol:String,tokenDecimals:Int,requestedAmountAsString:String)(implicitevidence$12:cats.Applicative[P]):P[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[BigInt]]", "kind" : "def"}, {"label" : "balancePredicate", "tail" : "(token: Erc20Token, account: EthereumAccount)(arg0: TokenTransactionOps[P], arg1: Functor[P]): P[ValidatedTransaction[Balance]]", "member" : "com.clluc.stockmind.core.transaction.ValidatedTransactionLogic.balancePredicate", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#balancePredicate[P[_]](token:com.clluc.stockmind.core.ethereum.Erc20Token,account:com.clluc.stockmind.core.ethereum.EthereumAccount)(implicitevidence$10:com.clluc.stockmind.core.tokens.TokenTransactionOps[P],implicitevidence$11:cats.Functor[P]):P[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[com.clluc.stockmind.core.user.Balance]]", "kind" : "def"}, {"label" : "ethereumAccountForAddressPredicate", "tail" : "(address: Address)(arg0: TokenTransactionOps[P], arg1: Functor[P]): P[ValidatedTransaction[EthereumAccount]]", "member" : "com.clluc.stockmind.core.transaction.ValidatedTransactionLogic.ethereumAccountForAddressPredicate", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#ethereumAccountForAddressPredicate[P[_]](address:com.clluc.stockmind.core.ethereum.solidity.Address)(implicitevidence$8:com.clluc.stockmind.core.tokens.TokenTransactionOps[P],implicitevidence$9:cats.Functor[P]):P[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[com.clluc.stockmind.core.ethereum.EthereumAccount]]", "kind" : "def"}, {"label" : "ethereumAccountForTwitterScreenNamePredicate", "tail" : "(twitterScreenName: String)(arg0: TokenTransactionOps[P], arg1: Monad[P]): P[ValidatedTransaction[EthereumAccount]]", "member" : "com.clluc.stockmind.core.transaction.ValidatedTransactionLogic.ethereumAccountForTwitterScreenNamePredicate", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#ethereumAccountForTwitterScreenNamePredicate[P[_]](twitterScreenName:String)(implicitevidence$6:com.clluc.stockmind.core.tokens.TokenTransactionOps[P],implicitevidence$7:cats.Monad[P]):P[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[com.clluc.stockmind.core.ethereum.EthereumAccount]]", "kind" : "def"}, {"label" : "ethereumAccountForUserPredicate", "tail" : "(userId: UUID, twitterScreenName: String)(arg0: TokenTransactionOps[P], arg1: Functor[P]): P[ValidatedTransaction[EthereumAccount]]", "member" : "com.clluc.stockmind.core.transaction.ValidatedTransactionLogic.ethereumAccountForUserPredicate", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#ethereumAccountForUserPredicate[P[_]](userId:java.util.UUID,twitterScreenName:String)(implicitevidence$4:com.clluc.stockmind.core.tokens.TokenTransactionOps[P],implicitevidence$5:cats.Functor[P]):P[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[com.clluc.stockmind.core.ethereum.EthereumAccount]]", "kind" : "def"}, {"label" : "twitterAccountPredicate", "tail" : "(screenName: TwitterHandle)(arg0: TokenTransactionOps[P], arg1: Functor[P]): P[ValidatedTransaction[TwitterAccount]]", "member" : "com.clluc.stockmind.core.transaction.ValidatedTransactionLogic.twitterAccountPredicate", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#twitterAccountPredicate[P[_]](screenName:com.clluc.stockmind.core.twitter.TwitterHandle)(implicitevidence$2:com.clluc.stockmind.core.tokens.TokenTransactionOps[P],implicitevidence$3:cats.Functor[P]):P[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[com.clluc.stockmind.core.twitter.TwitterAccount]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/clluc\/stockmind\/core\/transaction\/transfer\/PendingTransfersAdapter.html", "kind" : "class"}], "com.clluc.stockmind.core.actor" : [{"name" : "com.clluc.stockmind.core.actor.AuthTokenCleaner", "shortDescription" : "The companion object.", "object" : "com\/clluc\/stockmind\/core\/actor\/AuthTokenCleaner$.html", "members_object" : [{"label" : "props", "tail" : "(authTokenPort: AuthTokenPort, clock: () ⇒ DateTime)(executionContext: ExecutionContext): Props", "member" : "com.clluc.stockmind.core.actor.AuthTokenCleaner.props", "link" : "com\/clluc\/stockmind\/core\/actor\/AuthTokenCleaner$.html#props(authTokenPort:com.clluc.stockmind.port.secondary.AuthTokenPort,clock:()=>org.joda.time.DateTime)(implicitexecutionContext:scala.concurrent.ExecutionContext):akka.actor.Props", "kind" : "def"}, {"label" : "Clean", "tail" : "", "member" : "com.clluc.stockmind.core.actor.AuthTokenCleaner.Clean", "link" : "com\/clluc\/stockmind\/core\/actor\/AuthTokenCleaner$.html#Clean", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/core\/actor\/AuthTokenCleaner$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/core\/actor\/AuthTokenCleaner$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/core\/actor\/AuthTokenCleaner$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/core\/actor\/AuthTokenCleaner$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/core\/actor\/AuthTokenCleaner$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/core\/actor\/AuthTokenCleaner$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/core\/actor\/AuthTokenCleaner$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/actor\/AuthTokenCleaner$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/actor\/AuthTokenCleaner$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/actor\/AuthTokenCleaner$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/core\/actor\/AuthTokenCleaner$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/core\/actor\/AuthTokenCleaner$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/core\/actor\/AuthTokenCleaner$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/core\/actor\/AuthTokenCleaner$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/core\/actor\/AuthTokenCleaner$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/core\/actor\/AuthTokenCleaner$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/core\/actor\/AuthTokenCleaner$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/core\/actor\/AuthTokenCleaner$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/core\/actor\/AuthTokenCleaner$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.clluc.stockmind.core.actor.BlockWatcherActor", "shortDescription" : "", "object" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor$.html", "members_class" : [{"label" : "filterAndSendTransactions", "tail" : ": SourceQueueWithComplete[Transaction]", "member" : "com.clluc.stockmind.core.actor.BlockWatcherActor.filterAndSendTransactions", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#filterAndSendTransactions:akka.stream.scaladsl.SourceQueueWithComplete[com.clluc.stockmind.core.ethereum.Transaction]", "kind" : "val"}, {"label" : "isZeroValueTransaction", "tail" : "(tx: Transaction): Boolean", "member" : "com.clluc.stockmind.core.actor.BlockWatcherActor.isZeroValueTransaction", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#isZeroValueTransaction(tx:com.clluc.stockmind.core.ethereum.Transaction):Boolean", "kind" : "def"}, {"label" : "process", "tail" : "(evts: EthereumResponse[Option[List[Transaction]]]): Either[Unit, Boolean]", "member" : "com.clluc.stockmind.core.actor.BlockWatcherActor.process", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#process(evts:com.clluc.stockmind.core.ethereum.JsonRpcResponse.EthereumResponse[Option[List[com.clluc.stockmind.core.ethereum.Transaction]]]):Either[Unit,Boolean]", "kind" : "def"}, {"label" : "receive", "tail" : "(): Receive", "member" : "com.clluc.stockmind.core.actor.BlockWatcherActor.receive", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#receive:BlockWatcherActor.this.Receive", "kind" : "def"}, {"label" : "mostRecentBlock", "tail" : ": Block", "member" : "com.clluc.stockmind.core.actor.BlockWatcherActor.mostRecentBlock", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#mostRecentBlock:com.clluc.stockmind.core.ethereum.Block", "kind" : "var"}, {"label" : "lastProcessedBlock", "tail" : ": Block", "member" : "com.clluc.stockmind.core.actor.BlockWatcherActor.lastProcessedBlock", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#lastProcessedBlock:com.clluc.stockmind.core.ethereum.Block", "kind" : "var"}, {"member" : "com.clluc.stockmind.core.actor.BlockWatcherActor#<init>", "error" : "unsupported entity"}, {"label" : "freeze", "tail" : "(): Unit", "member" : "com.clluc.stockmind.core.actor.Freezable.freeze", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#freeze():Unit", "kind" : "def"}, {"label" : "frozen", "tail" : "(): Receive", "member" : "com.clluc.stockmind.core.actor.Freezable.frozen", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#frozen:Freezable.this.Receive", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "postStop", "tail" : "(): Unit", "member" : "akka.actor.UnrestrictedStash.postStop", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#postStop():Unit", "kind" : "def"}, {"label" : "preRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.UnrestrictedStash.preRestart", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#preRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "unstashAll", "tail" : "(): Unit", "member" : "akka.actor.StashSupport.unstashAll", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#unstashAll():Unit", "kind" : "def"}, {"label" : "stash", "tail" : "(): Unit", "member" : "akka.actor.StashSupport.stash", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#stash():Unit", "kind" : "def"}, {"label" : "unhandled", "tail" : "(message: Any): Unit", "member" : "akka.actor.Actor.unhandled", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#unhandled(message:Any):Unit", "kind" : "def"}, {"label" : "postRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.postRestart", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#postRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.preStart", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#preStart():Unit", "kind" : "def"}, {"label" : "supervisorStrategy", "tail" : "(): SupervisorStrategy", "member" : "akka.actor.Actor.supervisorStrategy", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#supervisorStrategy:akka.actor.SupervisorStrategy", "kind" : "def"}, {"label" : "aroundPostRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.aroundPostRestart", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#aroundPostRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "aroundPreRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.Actor.aroundPreRestart", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#aroundPreRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "aroundPostStop", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPostStop", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#aroundPostStop():Unit", "kind" : "def"}, {"label" : "aroundPreStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPreStart", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#aroundPreStart():Unit", "kind" : "def"}, {"label" : "aroundReceive", "tail" : "(receive: akka.actor.Actor.Receive, msg: Any): Unit", "member" : "akka.actor.Actor.aroundReceive", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#aroundReceive(receive:akka.actor.Actor.Receive,msg:Any):Unit", "kind" : "def"}, {"label" : "sender", "tail" : "(): ActorRef", "member" : "akka.actor.Actor.sender", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#sender():akka.actor.ActorRef", "kind" : "final def"}, {"label" : "self", "tail" : ": ActorRef", "member" : "akka.actor.Actor.self", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#self:akka.actor.ActorRef", "kind" : "implicit final val"}, {"label" : "context", "tail" : ": ActorContext", "member" : "akka.actor.Actor.context", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#context:akka.actor.ActorContext", "kind" : "implicit val"}, {"label" : "Receive", "tail" : "", "member" : "akka.actor.Actor.Receive", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#Receive=akka.actor.Actor.Receive", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "ParseBlock", "tail" : "", "member" : "com.clluc.stockmind.core.actor.BlockWatcherActor.ParseBlock", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor$.html#ParseBlockextendsProductwithSerializable", "kind" : "case class"}, {"label" : "MostRecentBlock", "tail" : "", "member" : "com.clluc.stockmind.core.actor.BlockWatcherActor.MostRecentBlock", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor$.html#MostRecentBlockextendsProductwithSerializable", "kind" : "case class"}, {"label" : "props", "tail" : "(startingBlock: Block, getTransactions: (Block) ⇒ Future[EthereumResponse[Option[List[Transaction]]]], findAddress: (Address) ⇒ Future[Option[EthereumAccount]], storeLastProcessedBlock: (Block) ⇒ Future[Block], masterAddress: Address, eventProcessor: ActorRef, gasSupplier: ActorRef)(executionContext: ExecutionContext, materializer: Materializer): Props", "member" : "com.clluc.stockmind.core.actor.BlockWatcherActor.props", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor$.html#props(startingBlock:com.clluc.stockmind.core.ethereum.Block,getTransactions:com.clluc.stockmind.core.ethereum.Block=>scala.concurrent.Future[com.clluc.stockmind.core.ethereum.JsonRpcResponse.EthereumResponse[Option[List[com.clluc.stockmind.core.ethereum.Transaction]]]],findAddress:com.clluc.stockmind.core.ethereum.solidity.Address=>scala.concurrent.Future[Option[com.clluc.stockmind.core.ethereum.EthereumAccount]],storeLastProcessedBlock:com.clluc.stockmind.core.ethereum.Block=>scala.concurrent.Future[com.clluc.stockmind.core.ethereum.Block],masterAddress:com.clluc.stockmind.core.ethereum.solidity.Address,eventProcessor:akka.actor.ActorRef,gasSupplier:akka.actor.ActorRef)(implicitexecutionContext:scala.concurrent.ExecutionContext,implicitmaterializer:akka.stream.Materializer):akka.actor.Props", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/clluc\/stockmind\/core\/actor\/BlockWatcherActor.html", "kind" : "object"}, {"name" : "com.clluc.stockmind.core.actor.EventProcessorActor", "shortDescription" : "", "object" : "com\/clluc\/stockmind\/core\/actor\/EventProcessorActor$.html", "members_object" : [{"label" : "props", "tail" : "(timestamp: ⇒ DateTime)(executionContext: ExecutionContext, eventProcessorOps: EventProcessorOps[Future]): Props", "member" : "com.clluc.stockmind.core.actor.EventProcessorActor.props", "link" : "com\/clluc\/stockmind\/core\/actor\/EventProcessorActor$.html#props(timestamp:=>org.joda.time.DateTime)(implicitexecutionContext:scala.concurrent.ExecutionContext,impliciteventProcessorOps:com.clluc.stockmind.core.actor.EventProcessorOps[scala.concurrent.Future]):akka.actor.Props", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/core\/actor\/EventProcessorActor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/core\/actor\/EventProcessorActor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/core\/actor\/EventProcessorActor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/core\/actor\/EventProcessorActor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/core\/actor\/EventProcessorActor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/core\/actor\/EventProcessorActor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/core\/actor\/EventProcessorActor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/actor\/EventProcessorActor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/actor\/EventProcessorActor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/actor\/EventProcessorActor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/core\/actor\/EventProcessorActor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/core\/actor\/EventProcessorActor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/core\/actor\/EventProcessorActor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/core\/actor\/EventProcessorActor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/core\/actor\/EventProcessorActor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/core\/actor\/EventProcessorActor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/core\/actor\/EventProcessorActor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/core\/actor\/EventProcessorActor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/core\/actor\/EventProcessorActor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.clluc.stockmind.core.actor.EventWatcherActor", "shortDescription" : "", "object" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor$.html", "members_class" : [{"label" : "receive", "tail" : "(): PartialFunction[Any, Unit]", "member" : "com.clluc.stockmind.core.actor.EventWatcherActor.receive", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#receive:PartialFunction[Any,Unit]", "kind" : "def"}, {"member" : "com.clluc.stockmind.core.actor.EventWatcherActor#<init>", "error" : "unsupported entity"}, {"label" : "freeze", "tail" : "(): Unit", "member" : "com.clluc.stockmind.core.actor.Freezable.freeze", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#freeze():Unit", "kind" : "def"}, {"label" : "frozen", "tail" : "(): Receive", "member" : "com.clluc.stockmind.core.actor.Freezable.frozen", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#frozen:Freezable.this.Receive", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "postStop", "tail" : "(): Unit", "member" : "akka.actor.UnrestrictedStash.postStop", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#postStop():Unit", "kind" : "def"}, {"label" : "preRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.UnrestrictedStash.preRestart", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#preRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "unstashAll", "tail" : "(): Unit", "member" : "akka.actor.StashSupport.unstashAll", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#unstashAll():Unit", "kind" : "def"}, {"label" : "stash", "tail" : "(): Unit", "member" : "akka.actor.StashSupport.stash", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#stash():Unit", "kind" : "def"}, {"label" : "unhandled", "tail" : "(message: Any): Unit", "member" : "akka.actor.Actor.unhandled", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#unhandled(message:Any):Unit", "kind" : "def"}, {"label" : "postRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.postRestart", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#postRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.preStart", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#preStart():Unit", "kind" : "def"}, {"label" : "supervisorStrategy", "tail" : "(): SupervisorStrategy", "member" : "akka.actor.Actor.supervisorStrategy", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#supervisorStrategy:akka.actor.SupervisorStrategy", "kind" : "def"}, {"label" : "aroundPostRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.aroundPostRestart", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#aroundPostRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "aroundPreRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.Actor.aroundPreRestart", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#aroundPreRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "aroundPostStop", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPostStop", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#aroundPostStop():Unit", "kind" : "def"}, {"label" : "aroundPreStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPreStart", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#aroundPreStart():Unit", "kind" : "def"}, {"label" : "aroundReceive", "tail" : "(receive: akka.actor.Actor.Receive, msg: Any): Unit", "member" : "akka.actor.Actor.aroundReceive", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#aroundReceive(receive:akka.actor.Actor.Receive,msg:Any):Unit", "kind" : "def"}, {"label" : "sender", "tail" : "(): ActorRef", "member" : "akka.actor.Actor.sender", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#sender():akka.actor.ActorRef", "kind" : "final def"}, {"label" : "self", "tail" : ": ActorRef", "member" : "akka.actor.Actor.self", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#self:akka.actor.ActorRef", "kind" : "implicit final val"}, {"label" : "context", "tail" : ": ActorContext", "member" : "akka.actor.Actor.context", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#context:akka.actor.ActorContext", "kind" : "implicit val"}, {"label" : "Receive", "tail" : "", "member" : "akka.actor.Actor.Receive", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#Receive=akka.actor.Actor.Receive", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "WatchNewToken", "tail" : "", "member" : "com.clluc.stockmind.core.actor.EventWatcherActor.WatchNewToken", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor$.html#WatchNewTokenextendsProductwithSerializable", "kind" : "case class"}, {"label" : "ReadBlock", "tail" : "", "member" : "com.clluc.stockmind.core.actor.EventWatcherActor.ReadBlock", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor$.html#ReadBlockextendsProductwithSerializable", "kind" : "case class"}, {"label" : "Check", "tail" : "", "member" : "com.clluc.stockmind.core.actor.EventWatcherActor.Check", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor$.html#Check", "kind" : "object"}, {"label" : "CatchupTo", "tail" : "", "member" : "com.clluc.stockmind.core.actor.EventWatcherActor.CatchupTo", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor$.html#CatchupToextendsProductwithSerializable", "kind" : "case class"}, {"label" : "props", "tail" : "(startingBlock: Block, addresses: List[Address], topics: List[String], getLogs: (EthFilter) ⇒ Future[JsonRpcLoggedEvents], setBlock: (Block) ⇒ Future[Block], onEvent: (LoggedEvent) ⇒ Unit)(executionContext: ExecutionContext): Props", "member" : "com.clluc.stockmind.core.actor.EventWatcherActor.props", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor$.html#props(startingBlock:com.clluc.stockmind.core.ethereum.Block,addresses:List[com.clluc.stockmind.core.ethereum.solidity.Address],topics:List[String],getLogs:com.clluc.stockmind.core.ethereum.EthFilter=>scala.concurrent.Future[com.clluc.stockmind.core.ethereum.JsonRpcResponse.JsonRpcLoggedEvents],setBlock:com.clluc.stockmind.core.ethereum.Block=>scala.concurrent.Future[com.clluc.stockmind.core.ethereum.Block],onEvent:com.clluc.stockmind.core.ethereum.LoggedEvent=>Unit)(implicitexecutionContext:scala.concurrent.ExecutionContext):akka.actor.Props", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/clluc\/stockmind\/core\/actor\/EventWatcherActor.html", "kind" : "object"}, {"name" : "com.clluc.stockmind.core.actor.Freezable", "shortDescription" : "", "object" : "com\/clluc\/stockmind\/core\/actor\/Freezable$.html", "members_object" : [{"label" : "Unfreeze", "tail" : "", "member" : "com.clluc.stockmind.core.actor.Freezable.Unfreeze", "link" : "com\/clluc\/stockmind\/core\/actor\/Freezable$.html#Unfreeze", "kind" : "object"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/core\/actor\/Freezable$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/core\/actor\/Freezable$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/core\/actor\/Freezable$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/core\/actor\/Freezable$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/core\/actor\/Freezable$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/core\/actor\/Freezable$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/core\/actor\/Freezable$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/actor\/Freezable$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/actor\/Freezable$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/actor\/Freezable$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/core\/actor\/Freezable$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/core\/actor\/Freezable$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/core\/actor\/Freezable$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/core\/actor\/Freezable$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/core\/actor\/Freezable$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/core\/actor\/Freezable$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/core\/actor\/Freezable$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/core\/actor\/Freezable$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/core\/actor\/Freezable$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.clluc.stockmind.core.actor.Scheduler", "shortDescription" : "", "object" : "com\/clluc\/stockmind\/core\/actor\/Scheduler$.html", "members_object" : [{"label" : "apply", "tail" : "(system: ActorSystem, authTokenCleaner: ActorRef, schedulingConfig: SchedulingConfig): Scheduler", "member" : "com.clluc.stockmind.core.actor.Scheduler.apply", "link" : "com\/clluc\/stockmind\/core\/actor\/Scheduler$.html#apply(system:akka.actor.ActorSystem,authTokenCleaner:akka.actor.ActorRef,schedulingConfig:com.clluc.stockmind.core.actor.Scheduler.SchedulingConfig):com.clluc.stockmind.core.actor.Scheduler", "kind" : "def"}, {"label" : "SchedulingConfig", "tail" : "", "member" : "com.clluc.stockmind.core.actor.Scheduler.SchedulingConfig", "link" : "com\/clluc\/stockmind\/core\/actor\/Scheduler$.html#SchedulingConfigextendsProductwithSerializable", "kind" : "case class"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/core\/actor\/Scheduler$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/core\/actor\/Scheduler$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/core\/actor\/Scheduler$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/core\/actor\/Scheduler$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/core\/actor\/Scheduler$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/core\/actor\/Scheduler$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/core\/actor\/Scheduler$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/actor\/Scheduler$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/actor\/Scheduler$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/actor\/Scheduler$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/core\/actor\/Scheduler$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/core\/actor\/Scheduler$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/core\/actor\/Scheduler$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/core\/actor\/Scheduler$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/core\/actor\/Scheduler$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/core\/actor\/Scheduler$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/core\/actor\/Scheduler$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/core\/actor\/Scheduler$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/core\/actor\/Scheduler$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.clluc.stockmind.core.actor.SupplierAccountsActor", "shortDescription" : "", "object" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor$.html", "members_class" : [{"label" : "supplyIfNeeded", "tail" : "(sender: Address): OptionT[Future, Any]", "member" : "com.clluc.stockmind.core.actor.SupplierAccountsActor.supplyIfNeeded", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#supplyIfNeeded(sender:com.clluc.stockmind.core.ethereum.solidity.Address):cats.data.OptionT[scala.concurrent.Future,Any]", "kind" : "def"}, {"label" : "receive", "tail" : "(): Receive", "member" : "com.clluc.stockmind.core.actor.SupplierAccountsActor.receive", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#receive:SupplierAccountsActor.this.Receive", "kind" : "def"}, {"member" : "com.clluc.stockmind.core.actor.SupplierAccountsActor#<init>", "error" : "unsupported entity"}, {"label" : "freeze", "tail" : "(): Unit", "member" : "com.clluc.stockmind.core.actor.Freezable.freeze", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#freeze():Unit", "kind" : "def"}, {"label" : "frozen", "tail" : "(): Receive", "member" : "com.clluc.stockmind.core.actor.Freezable.frozen", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#frozen:Freezable.this.Receive", "kind" : "def"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "postStop", "tail" : "(): Unit", "member" : "akka.actor.UnrestrictedStash.postStop", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#postStop():Unit", "kind" : "def"}, {"label" : "preRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.UnrestrictedStash.preRestart", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#preRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "unstashAll", "tail" : "(): Unit", "member" : "akka.actor.StashSupport.unstashAll", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#unstashAll():Unit", "kind" : "def"}, {"label" : "stash", "tail" : "(): Unit", "member" : "akka.actor.StashSupport.stash", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#stash():Unit", "kind" : "def"}, {"label" : "unhandled", "tail" : "(message: Any): Unit", "member" : "akka.actor.Actor.unhandled", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#unhandled(message:Any):Unit", "kind" : "def"}, {"label" : "postRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.postRestart", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#postRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "preStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.preStart", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#preStart():Unit", "kind" : "def"}, {"label" : "supervisorStrategy", "tail" : "(): SupervisorStrategy", "member" : "akka.actor.Actor.supervisorStrategy", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#supervisorStrategy:akka.actor.SupervisorStrategy", "kind" : "def"}, {"label" : "aroundPostRestart", "tail" : "(reason: Throwable): Unit", "member" : "akka.actor.Actor.aroundPostRestart", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#aroundPostRestart(reason:Throwable):Unit", "kind" : "def"}, {"label" : "aroundPreRestart", "tail" : "(reason: Throwable, message: Option[Any]): Unit", "member" : "akka.actor.Actor.aroundPreRestart", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#aroundPreRestart(reason:Throwable,message:Option[Any]):Unit", "kind" : "def"}, {"label" : "aroundPostStop", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPostStop", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#aroundPostStop():Unit", "kind" : "def"}, {"label" : "aroundPreStart", "tail" : "(): Unit", "member" : "akka.actor.Actor.aroundPreStart", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#aroundPreStart():Unit", "kind" : "def"}, {"label" : "aroundReceive", "tail" : "(receive: akka.actor.Actor.Receive, msg: Any): Unit", "member" : "akka.actor.Actor.aroundReceive", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#aroundReceive(receive:akka.actor.Actor.Receive,msg:Any):Unit", "kind" : "def"}, {"label" : "sender", "tail" : "(): ActorRef", "member" : "akka.actor.Actor.sender", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#sender():akka.actor.ActorRef", "kind" : "final def"}, {"label" : "self", "tail" : ": ActorRef", "member" : "akka.actor.Actor.self", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#self:akka.actor.ActorRef", "kind" : "implicit final val"}, {"label" : "context", "tail" : ": ActorContext", "member" : "akka.actor.Actor.context", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#context:akka.actor.ActorContext", "kind" : "implicit val"}, {"label" : "Receive", "tail" : "", "member" : "akka.actor.Actor.Receive", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#Receive=akka.actor.Actor.Receive", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "props", "tail" : "(supplier: (Address, String), refillThreshold: BigInt, amountToRefill: BigInt, ethereumAccountPort: EthereumAccountPort, ethMasterAccount: Address, getBalance: (Address) ⇒ Future[Either[UnexpectedEthereumResponse, BigInt]], sendEther: (Address, Address, BigInt, String) ⇒ Future[JsonRpcPlainResult])(executionContext: ExecutionContext): Props", "member" : "com.clluc.stockmind.core.actor.SupplierAccountsActor.props", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor$.html#props(supplier:(com.clluc.stockmind.core.ethereum.solidity.Address,String),refillThreshold:BigInt,amountToRefill:BigInt,ethereumAccountPort:com.clluc.stockmind.port.secondary.EthereumAccountPort,ethMasterAccount:com.clluc.stockmind.core.ethereum.solidity.Address,getBalance:com.clluc.stockmind.core.ethereum.solidity.Address=>scala.concurrent.Future[Either[com.clluc.stockmind.core.ethereum.JsonRpcResponse.UnexpectedEthereumResponse,BigInt]],sendEther:(com.clluc.stockmind.core.ethereum.solidity.Address,com.clluc.stockmind.core.ethereum.solidity.Address,BigInt,String)=>scala.concurrent.Future[com.clluc.stockmind.core.ethereum.JsonRpcResponse.JsonRpcPlainResult])(implicitexecutionContext:scala.concurrent.ExecutionContext):akka.actor.Props", "kind" : "def"}, {"label" : "Password", "tail" : "", "member" : "com.clluc.stockmind.core.actor.SupplierAccountsActor.Password", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor$.html#Password=String", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/clluc\/stockmind\/core\/actor\/SupplierAccountsActor.html", "kind" : "object"}], "com.clluc.stockmind" : [], "com.clluc.stockmind.core.auth" : [{"name" : "com.clluc.stockmind.core.auth.Oauth1InfoAdapter", "shortDescription" : "", "object" : "com\/clluc\/stockmind\/core\/auth\/Oauth1InfoAdapter$.html", "members_object" : [{"label" : "apply", "tail" : "(port: Oauth1InfoPort): Oauth1InfoAdapter", "member" : "com.clluc.stockmind.core.auth.Oauth1InfoAdapter.apply", "link" : "com\/clluc\/stockmind\/core\/auth\/Oauth1InfoAdapter$.html#apply(port:com.clluc.stockmind.port.secondary.Oauth1InfoPort):com.clluc.stockmind.core.auth.Oauth1InfoAdapter", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/core\/auth\/Oauth1InfoAdapter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/core\/auth\/Oauth1InfoAdapter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/core\/auth\/Oauth1InfoAdapter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/core\/auth\/Oauth1InfoAdapter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/core\/auth\/Oauth1InfoAdapter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/core\/auth\/Oauth1InfoAdapter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/core\/auth\/Oauth1InfoAdapter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/auth\/Oauth1InfoAdapter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/auth\/Oauth1InfoAdapter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/auth\/Oauth1InfoAdapter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/core\/auth\/Oauth1InfoAdapter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/core\/auth\/Oauth1InfoAdapter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/core\/auth\/Oauth1InfoAdapter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/core\/auth\/Oauth1InfoAdapter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/core\/auth\/Oauth1InfoAdapter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/core\/auth\/Oauth1InfoAdapter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/core\/auth\/Oauth1InfoAdapter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/core\/auth\/Oauth1InfoAdapter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/core\/auth\/Oauth1InfoAdapter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.clluc.stockmind.core.auth.SocialAuthAdapter", "shortDescription" : "", "object" : "com\/clluc\/stockmind\/core\/auth\/SocialAuthAdapter$.html", "members_object" : [{"label" : "apply", "tail" : "(userPort: UserPort, twitterPort: TwitterPort, twitterAccountPort: TwitterAccountPort, ethereumClientPort: EthereumClientPort, configuration: SignUpConfiguration, erc20InfoPort: Erc20InfoPort)(executionContext: ExecutionContext): SocialAuthAdapter", "member" : "com.clluc.stockmind.core.auth.SocialAuthAdapter.apply", "link" : "com\/clluc\/stockmind\/core\/auth\/SocialAuthAdapter$.html#apply(userPort:com.clluc.stockmind.port.secondary.UserPort,twitterPort:com.clluc.stockmind.port.secondary.TwitterPort,twitterAccountPort:com.clluc.stockmind.port.secondary.TwitterAccountPort,ethereumClientPort:com.clluc.stockmind.port.secondary.EthereumClientPort,configuration:com.clluc.stockmind.core.SignUpConfiguration,erc20InfoPort:com.clluc.stockmind.port.secondary.Erc20InfoPort)(implicitexecutionContext:scala.concurrent.ExecutionContext):com.clluc.stockmind.core.auth.SocialAuthAdapter", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/core\/auth\/SocialAuthAdapter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/core\/auth\/SocialAuthAdapter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/core\/auth\/SocialAuthAdapter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/core\/auth\/SocialAuthAdapter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/core\/auth\/SocialAuthAdapter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/core\/auth\/SocialAuthAdapter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/core\/auth\/SocialAuthAdapter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/auth\/SocialAuthAdapter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/auth\/SocialAuthAdapter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/auth\/SocialAuthAdapter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/core\/auth\/SocialAuthAdapter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/core\/auth\/SocialAuthAdapter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/core\/auth\/SocialAuthAdapter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/core\/auth\/SocialAuthAdapter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/core\/auth\/SocialAuthAdapter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/core\/auth\/SocialAuthAdapter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/core\/auth\/SocialAuthAdapter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/core\/auth\/SocialAuthAdapter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/core\/auth\/SocialAuthAdapter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.clluc.stockmind.core.transaction" : [{"name" : "com.clluc.stockmind.core.transaction.RetrieveTransactionsAdapter", "shortDescription" : "", "object" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsAdapter$.html", "members_object" : [{"label" : "apply", "tail" : "(ethereumAccountPort: EthereumAccountPort, offchainTransferPort: OffChainTransferPort, pendingTransferPort: PendingTransferPort, erc20InfoPort: Erc20InfoPort, erc20TransferEventPort: Erc20TransferEventPort, twitterPort: TwitterPort, twitterAccountPort: TwitterAccountPort, userPort: UserPort)(executionContext: ExecutionContext): RetrieveTransactionsAdapter", "member" : "com.clluc.stockmind.core.transaction.RetrieveTransactionsAdapter.apply", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsAdapter$.html#apply(ethereumAccountPort:com.clluc.stockmind.port.secondary.EthereumAccountPort,offchainTransferPort:com.clluc.stockmind.port.secondary.OffChainTransferPort,pendingTransferPort:com.clluc.stockmind.port.secondary.PendingTransferPort,erc20InfoPort:com.clluc.stockmind.port.secondary.Erc20InfoPort,erc20TransferEventPort:com.clluc.stockmind.port.secondary.Erc20TransferEventPort,twitterPort:com.clluc.stockmind.port.secondary.TwitterPort,twitterAccountPort:com.clluc.stockmind.port.secondary.TwitterAccountPort,userPort:com.clluc.stockmind.port.secondary.UserPort)(implicitexecutionContext:scala.concurrent.ExecutionContext):com.clluc.stockmind.core.transaction.RetrieveTransactionsAdapter", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsAdapter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsAdapter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsAdapter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsAdapter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsAdapter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsAdapter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsAdapter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsAdapter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsAdapter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsAdapter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsAdapter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsAdapter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsAdapter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsAdapter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsAdapter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsAdapter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsAdapter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsAdapter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsAdapter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "com.clluc.stockmind.core.transaction.RetrieveTransactionsCachingOps", "members_trait" : [{"label" : "onchainTxFromId", "tail" : "(id: Long): Future[Option[TransferEvent]]", "member" : "com.clluc.stockmind.core.transaction.RetrieveTransactionsCachingOps.onchainTxFromId", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html#onchainTxFromId(id:Long):scala.concurrent.Future[Option[com.clluc.stockmind.core.ethereum.TransferEvent]]", "kind" : "def"}, {"label" : "userInfoFromId", "tail" : "(id: UUID): Future[Option[User]]", "member" : "com.clluc.stockmind.core.transaction.RetrieveTransactionsCachingOps.userInfoFromId", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html#userInfoFromId(id:java.util.UUID):scala.concurrent.Future[Option[com.clluc.stockmind.core.user.User]]", "kind" : "def"}, {"label" : "ethereumAccountByAddress", "tail" : "(add: Address): Future[Option[EthereumAccount]]", "member" : "com.clluc.stockmind.core.transaction.RetrieveTransactionsCachingOps.ethereumAccountByAddress", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html#ethereumAccountByAddress(add:com.clluc.stockmind.core.ethereum.solidity.Address):scala.concurrent.Future[Option[com.clluc.stockmind.core.ethereum.EthereumAccount]]", "kind" : "def"}, {"label" : "twitterAccountForUser", "tail" : "(userId: UUID): Future[Option[TwitterAccount]]", "member" : "com.clluc.stockmind.core.transaction.RetrieveTransactionsCachingOps.twitterAccountForUser", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html#twitterAccountForUser(userId:java.util.UUID):scala.concurrent.Future[Option[com.clluc.stockmind.core.twitter.TwitterAccount]]", "kind" : "def"}, {"label" : "twitterUserInfoByTwitterId", "tail" : "(key: Long, credentials: OAuth1Info): Future[Option[TwitterUserInfo]]", "member" : "com.clluc.stockmind.core.transaction.RetrieveTransactionsCachingOps.twitterUserInfoByTwitterId", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html#twitterUserInfoByTwitterId(key:Long,credentials:com.clluc.stockmind.core.oauth.OAuth1Info):scala.concurrent.Future[Option[com.clluc.stockmind.core.twitter.TwitterUserInfo]]", "kind" : "def"}, {"label" : "ethereumTokenBySymbol", "tail" : "(symbol: String): Future[Option[Erc20Token]]", "member" : "com.clluc.stockmind.core.transaction.RetrieveTransactionsCachingOps.ethereumTokenBySymbol", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html#ethereumTokenBySymbol(symbol:String):scala.concurrent.Future[Option[com.clluc.stockmind.core.ethereum.Erc20Token]]", "kind" : "def"}, {"label" : "ethereumAccountForUser", "tail" : "(userId: UUID): Future[Option[EthereumAccount]]", "member" : "com.clluc.stockmind.core.transaction.RetrieveTransactionsCachingOps.ethereumAccountForUser", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html#ethereumAccountForUser(userId:java.util.UUID):scala.concurrent.Future[Option[com.clluc.stockmind.core.ethereum.EthereumAccount]]", "kind" : "def"}, {"label" : "TransactionsPageCacheKey", "tail" : "", "member" : "com.clluc.stockmind.core.transaction.RetrieveTransactionsCachingOps.TransactionsPageCacheKey", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html#TransactionsPageCacheKeyextendsProductwithSerializable", "kind" : "case class"}, {"label" : "TwitterUserInfoByTwitterIdKey", "tail" : "", "member" : "com.clluc.stockmind.core.transaction.RetrieveTransactionsCachingOps.TwitterUserInfoByTwitterIdKey", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html#TwitterUserInfoByTwitterIdKeyextendsProductwithSerializable", "kind" : "case class"}, {"label" : "transactionsPage", "tail" : "(userId: UUID, offset: Int, limit: Int, oAuth1Info: Option[OAuth1Info])(ev: Monad[Future]): Future[ValidatedTxRetrievalResult[List[StockmindTransaction]]]", "member" : "com.clluc.stockmind.core.transaction.RetrieveTransactionsOps.transactionsPage", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html#transactionsPage(userId:java.util.UUID,offset:Int,limit:Int,oAuth1Info:Option[com.clluc.stockmind.core.oauth.OAuth1Info])(implicitev:cats.Monad[P]):P[com.clluc.stockmind.core.transaction.StockmindTransaction.ValidatedTxRetrievalResult[List[com.clluc.stockmind.core.transaction.StockmindTransaction]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "pendingTransfersByIssuer", "tail" : "(sourceUserId: UUID): Future[List[PendingTransfer]]", "member" : "com.clluc.stockmind.core.transaction.RetrieveTransactionsOps.pendingTransfersByIssuer", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html#pendingTransfersByIssuer(sourceUserId:java.util.UUID):P[List[com.clluc.stockmind.core.transaction.PendingTransfer]]", "kind" : "abstract def"}, {"label" : "offchainTransfers", "tail" : "(addressInvolved: Address): Future[List[OffChainTransfer]]", "member" : "com.clluc.stockmind.core.transaction.RetrieveTransactionsOps.offchainTransfers", "link" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html#offchainTransfers(addressInvolved:com.clluc.stockmind.core.ethereum.solidity.Address):P[List[com.clluc.stockmind.core.transaction.OffChainTransfer]]", "kind" : "abstract def"}], "shortDescription" : "", "trait" : "com\/clluc\/stockmind\/core\/transaction\/RetrieveTransactionsCachingOps.html", "kind" : "trait"}, {"name" : "com.clluc.stockmind.core.transaction.SendTransactionAdapter", "shortDescription" : "TODO Add Scaladoc.", "members_class" : [{"label" : "doTransaction", "tail" : "(request: TransactionRequest, oauthKey: String, oauthSecret: String, timestampFx: ⇒ DateTime, masterAccountPassword: String): Future[Either[TokenTransactionError, TransactionResult]]", "member" : "com.clluc.stockmind.core.transaction.SendTransactionAdapter.doTransaction", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#doTransaction(request:com.clluc.stockmind.core.transaction.TransactionRequest,oauthKey:String,oauthSecret:String,timestampFx:=>org.joda.time.DateTime,masterAccountPassword:String):scala.concurrent.Future[Either[com.clluc.stockmind.core.transaction.TokenTransactionError,com.clluc.stockmind.core.transaction.TransactionResult]]", "kind" : "def"}, {"member" : "com.clluc.stockmind.core.transaction.SendTransactionAdapter#<init>", "error" : "unsupported entity"}, {"label" : "processTransaction", "tail" : "(request: TransactionRequest, credentials: OAuth1Info, timestampFx: ⇒ DateTime, masterAccountPassword: String)(arg0: Monad[P], arg1: TokenTransactionOps[P]): P[ValidatedTransaction[TransactionResult]]", "member" : "com.clluc.stockmind.core.transaction.TransactionLogic.processTransaction", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#processTransaction[P[_]](request:com.clluc.stockmind.core.transaction.TransactionRequest,credentials:com.clluc.stockmind.core.oauth.OAuth1Info,timestampFx:=>org.joda.time.DateTime,masterAccountPassword:String)(implicitevidence$1:cats.Monad[P],implicitevidence$2:com.clluc.stockmind.core.tokens.TokenTransactionOps[P]):P[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[com.clluc.stockmind.core.transaction.TransactionResult]]", "kind" : "def"}, {"label" : "generateAndSendWithdrawTx", "tail" : "(request: WithdrawRequest, timestampFx: ⇒ DateTime, masterAccountPassword: String)(arg0: Monad[P], arg1: TokenTransactionOps[P]): P[ValidatedTransaction[OutboundTransfer]]", "member" : "com.clluc.stockmind.core.transaction.withdraw.WithdrawLogic.generateAndSendWithdrawTx", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#generateAndSendWithdrawTx[P[_]](request:com.clluc.stockmind.core.transaction.withdraw.WithdrawRequest,timestampFx:=>org.joda.time.DateTime,masterAccountPassword:String)(implicitevidence$1:cats.Monad[P],implicitevidence$2:com.clluc.stockmind.core.tokens.TokenTransactionOps[P]):P[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[com.clluc.stockmind.core.transaction.OutboundTransfer]]", "kind" : "def"}, {"label" : "processAndDoTransfer", "tail" : "(request: TransferRequest, twitterCredentials: OAuth1Info, timestampFx: ⇒ DateTime)(arg0: Monad[P], arg1: TokenTransactionOps[P]): P[ValidatedTransaction[TransactionResult]]", "member" : "com.clluc.stockmind.core.transaction.transfer.TransferLogic.processAndDoTransfer", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#processAndDoTransfer[P[_]](request:com.clluc.stockmind.core.transaction.transfer.TransferRequest,twitterCredentials:com.clluc.stockmind.core.oauth.OAuth1Info,timestampFx:=>org.joda.time.DateTime)(implicitevidence$1:cats.Monad[P],implicitevidence$2:com.clluc.stockmind.core.tokens.TokenTransactionOps[P]):P[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[com.clluc.stockmind.core.transaction.TransactionResult]]", "kind" : "def"}, {"label" : "twitterAccountByUserIdPredicate", "tail" : "(userId: UUID)(arg0: TokenTransactionOps[P], arg1: Functor[P]): P[ValidatedTransaction[TwitterAccount]]", "member" : "com.clluc.stockmind.core.transaction.ValidatedTransactionLogic.twitterAccountByUserIdPredicate", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#twitterAccountByUserIdPredicate[P[_]](userId:java.util.UUID)(implicitevidence$27:com.clluc.stockmind.core.tokens.TokenTransactionOps[P],implicitevidence$28:cats.Functor[P]):P[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[com.clluc.stockmind.core.twitter.TwitterAccount]]", "kind" : "def"}, {"label" : "omnibusAccountPredicate", "tail" : "(address: Address)(arg0: TokenTransactionOps[P], arg1: Functor[P]): P[ValidatedTransaction[Address]]", "member" : "com.clluc.stockmind.core.transaction.ValidatedTransactionLogic.omnibusAccountPredicate", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#omnibusAccountPredicate[P[_]](address:com.clluc.stockmind.core.ethereum.solidity.Address)(implicitevidence$25:com.clluc.stockmind.core.tokens.TokenTransactionOps[P],implicitevidence$26:cats.Functor[P]):P[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[com.clluc.stockmind.core.ethereum.solidity.Address]]", "kind" : "def"}, {"label" : "twitterApiUserIdPredicate", "tail" : "(screenName: TwitterHandle)(twitterUserCredentials: OAuth1Info)(arg0: TokenTransactionOps[P], arg1: Functor[P]): P[ValidatedTransaction[Long]]", "member" : "com.clluc.stockmind.core.transaction.ValidatedTransactionLogic.twitterApiUserIdPredicate", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#twitterApiUserIdPredicate[P[_]](screenName:com.clluc.stockmind.core.twitter.TwitterHandle)(twitterUserCredentials:com.clluc.stockmind.core.oauth.OAuth1Info)(implicitevidence$23:com.clluc.stockmind.core.tokens.TokenTransactionOps[P],implicitevidence$24:cats.Functor[P]):P[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[Long]]", "kind" : "def"}, {"label" : "oauth1InfoPredicate", "tail" : "(user: User)(arg0: TokenTransactionOps[P], arg1: Functor[P]): P[ValidatedTransaction[OAuth1Info]]", "member" : "com.clluc.stockmind.core.transaction.ValidatedTransactionLogic.oauth1InfoPredicate", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#oauth1InfoPredicate[P[_]](user:com.clluc.stockmind.core.user.User)(implicitevidence$21:com.clluc.stockmind.core.tokens.TokenTransactionOps[P],implicitevidence$22:cats.Functor[P]):P[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[com.clluc.stockmind.core.oauth.OAuth1Info]]", "kind" : "def"}, {"label" : "userIdFromOAuthProviderAndLoginKeyPredicate", "tail" : "(oauthProvider: String, key: String)(arg0: TokenTransactionOps[P], arg1: Functor[P]): P[ValidatedTransaction[UUID]]", "member" : "com.clluc.stockmind.core.transaction.ValidatedTransactionLogic.userIdFromOAuthProviderAndLoginKeyPredicate", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#userIdFromOAuthProviderAndLoginKeyPredicate[P[_]](oauthProvider:String,key:String)(implicitevidence$19:com.clluc.stockmind.core.tokens.TokenTransactionOps[P],implicitevidence$20:cats.Functor[P]):P[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[java.util.UUID]]", "kind" : "def"}, {"label" : "userPredicate", "tail" : "(id: UUID)(arg0: TokenTransactionOps[P], arg1: Functor[P]): P[ValidatedTransaction[User]]", "member" : "com.clluc.stockmind.core.transaction.ValidatedTransactionLogic.userPredicate", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#userPredicate[P[_]](id:java.util.UUID)(implicitevidence$17:com.clluc.stockmind.core.tokens.TokenTransactionOps[P],implicitevidence$18:cats.Functor[P]):P[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[com.clluc.stockmind.core.user.User]]", "kind" : "def"}, {"label" : "tokenBySymbolPredicate", "tail" : "(tokenSymbol: String)(arg0: Functor[P], arg1: TokenTransactionOps[P]): P[ValidatedTransaction[Erc20Token]]", "member" : "com.clluc.stockmind.core.transaction.ValidatedTransactionLogic.tokenBySymbolPredicate", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#tokenBySymbolPredicate[P[_]](tokenSymbol:String)(implicitevidence$15:cats.Functor[P],implicitevidence$16:com.clluc.stockmind.core.tokens.TokenTransactionOps[P]):P[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[com.clluc.stockmind.core.ethereum.Erc20Token]]", "kind" : "def"}, {"label" : "transactionSourceInfoPredicate", "tail" : "(tokenSymbol: String, transferSourceUserId: UUID, transferSourceTwitterScreenName: String, requestedAmountStr: String)(arg0: TokenTransactionOps[P], arg1: Monad[P]): P[ValidatedTransaction[TransactionSourceInfo]]", "member" : "com.clluc.stockmind.core.transaction.ValidatedTransactionLogic.transactionSourceInfoPredicate", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#transactionSourceInfoPredicate[P[_]](tokenSymbol:String,transferSourceUserId:java.util.UUID,transferSourceTwitterScreenName:String,requestedAmountStr:String)(implicitevidence$13:com.clluc.stockmind.core.tokens.TokenTransactionOps[P],implicitevidence$14:cats.Monad[P]):P[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[com.clluc.stockmind.core.transaction.TransactionSourceInfo]]", "kind" : "def"}, {"label" : "enoughBalancePredicate", "tail" : "(effectiveBalance: BigInt, transferSourceAddress: String, tokenSymbol: String, tokenDecimals: Int, requestedAmountAsString: String)(arg0: Applicative[P]): P[ValidatedTransaction[BigInt]]", "member" : "com.clluc.stockmind.core.transaction.ValidatedTransactionLogic.enoughBalancePredicate", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#enoughBalancePredicate[P[_]](effectiveBalance:BigInt,transferSourceAddress:String,tokenSymbol:String,tokenDecimals:Int,requestedAmountAsString:String)(implicitevidence$12:cats.Applicative[P]):P[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[BigInt]]", "kind" : "def"}, {"label" : "balancePredicate", "tail" : "(token: Erc20Token, account: EthereumAccount)(arg0: TokenTransactionOps[P], arg1: Functor[P]): P[ValidatedTransaction[Balance]]", "member" : "com.clluc.stockmind.core.transaction.ValidatedTransactionLogic.balancePredicate", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#balancePredicate[P[_]](token:com.clluc.stockmind.core.ethereum.Erc20Token,account:com.clluc.stockmind.core.ethereum.EthereumAccount)(implicitevidence$10:com.clluc.stockmind.core.tokens.TokenTransactionOps[P],implicitevidence$11:cats.Functor[P]):P[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[com.clluc.stockmind.core.user.Balance]]", "kind" : "def"}, {"label" : "ethereumAccountForAddressPredicate", "tail" : "(address: Address)(arg0: TokenTransactionOps[P], arg1: Functor[P]): P[ValidatedTransaction[EthereumAccount]]", "member" : "com.clluc.stockmind.core.transaction.ValidatedTransactionLogic.ethereumAccountForAddressPredicate", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#ethereumAccountForAddressPredicate[P[_]](address:com.clluc.stockmind.core.ethereum.solidity.Address)(implicitevidence$8:com.clluc.stockmind.core.tokens.TokenTransactionOps[P],implicitevidence$9:cats.Functor[P]):P[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[com.clluc.stockmind.core.ethereum.EthereumAccount]]", "kind" : "def"}, {"label" : "ethereumAccountForTwitterScreenNamePredicate", "tail" : "(twitterScreenName: String)(arg0: TokenTransactionOps[P], arg1: Monad[P]): P[ValidatedTransaction[EthereumAccount]]", "member" : "com.clluc.stockmind.core.transaction.ValidatedTransactionLogic.ethereumAccountForTwitterScreenNamePredicate", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#ethereumAccountForTwitterScreenNamePredicate[P[_]](twitterScreenName:String)(implicitevidence$6:com.clluc.stockmind.core.tokens.TokenTransactionOps[P],implicitevidence$7:cats.Monad[P]):P[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[com.clluc.stockmind.core.ethereum.EthereumAccount]]", "kind" : "def"}, {"label" : "ethereumAccountForUserPredicate", "tail" : "(userId: UUID, twitterScreenName: String)(arg0: TokenTransactionOps[P], arg1: Functor[P]): P[ValidatedTransaction[EthereumAccount]]", "member" : "com.clluc.stockmind.core.transaction.ValidatedTransactionLogic.ethereumAccountForUserPredicate", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#ethereumAccountForUserPredicate[P[_]](userId:java.util.UUID,twitterScreenName:String)(implicitevidence$4:com.clluc.stockmind.core.tokens.TokenTransactionOps[P],implicitevidence$5:cats.Functor[P]):P[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[com.clluc.stockmind.core.ethereum.EthereumAccount]]", "kind" : "def"}, {"label" : "twitterAccountPredicate", "tail" : "(screenName: TwitterHandle)(arg0: TokenTransactionOps[P], arg1: Functor[P]): P[ValidatedTransaction[TwitterAccount]]", "member" : "com.clluc.stockmind.core.transaction.ValidatedTransactionLogic.twitterAccountPredicate", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#twitterAccountPredicate[P[_]](screenName:com.clluc.stockmind.core.twitter.TwitterHandle)(implicitevidence$2:com.clluc.stockmind.core.tokens.TokenTransactionOps[P],implicitevidence$3:cats.Functor[P]):P[com.clluc.stockmind.core.transaction.TokenTransactionError.ValidatedTransaction[com.clluc.stockmind.core.twitter.TwitterAccount]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/clluc\/stockmind\/core\/transaction\/SendTransactionAdapter.html", "kind" : "class"}], "com.clluc" : [], "com.clluc.stockmind.core.twitter" : [{"name" : "com.clluc.stockmind.core.twitter.TwitterAdapter", "shortDescription" : "", "object" : "com\/clluc\/stockmind\/core\/twitter\/TwitterAdapter$.html", "members_object" : [{"label" : "apply", "tail" : "(secondaryTwitterPort: TwitterPort)(executionContext: ExecutionContext): TwitterAdapter", "member" : "com.clluc.stockmind.core.twitter.TwitterAdapter.apply", "link" : "com\/clluc\/stockmind\/core\/twitter\/TwitterAdapter$.html#apply(secondaryTwitterPort:com.clluc.stockmind.port.secondary.TwitterPort)(implicitexecutionContext:scala.concurrent.ExecutionContext):com.clluc.stockmind.core.twitter.TwitterAdapter", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/core\/twitter\/TwitterAdapter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/core\/twitter\/TwitterAdapter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/core\/twitter\/TwitterAdapter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/core\/twitter\/TwitterAdapter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/core\/twitter\/TwitterAdapter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/core\/twitter\/TwitterAdapter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/core\/twitter\/TwitterAdapter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/twitter\/TwitterAdapter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/twitter\/TwitterAdapter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/twitter\/TwitterAdapter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/core\/twitter\/TwitterAdapter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/core\/twitter\/TwitterAdapter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/core\/twitter\/TwitterAdapter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/core\/twitter\/TwitterAdapter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/core\/twitter\/TwitterAdapter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/core\/twitter\/TwitterAdapter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/core\/twitter\/TwitterAdapter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/core\/twitter\/TwitterAdapter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/core\/twitter\/TwitterAdapter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.clluc.stockmind.core.transaction.withdraw" : [{"name" : "com.clluc.stockmind.core.transaction.withdraw.WithdrawRequest", "shortDescription" : "TODO Add Scaladoc.", "members_case class" : [{"member" : "com.clluc.stockmind.core.transaction.withdraw.WithdrawRequest#<init>", "error" : "unsupported entity"}, {"label" : "amount", "tail" : ": String", "member" : "com.clluc.stockmind.core.transaction.withdraw.WithdrawRequest.amount", "link" : "com\/clluc\/stockmind\/core\/transaction\/withdraw\/WithdrawRequest.html#amount:String", "kind" : "val"}, {"label" : "tokenSymbol", "tail" : ": String", "member" : "com.clluc.stockmind.core.transaction.withdraw.WithdrawRequest.tokenSymbol", "link" : "com\/clluc\/stockmind\/core\/transaction\/withdraw\/WithdrawRequest.html#tokenSymbol:String", "kind" : "val"}, {"label" : "destinationEthereumAddress", "tail" : ": Address", "member" : "com.clluc.stockmind.core.transaction.withdraw.WithdrawRequest.destinationEthereumAddress", "link" : "com\/clluc\/stockmind\/core\/transaction\/withdraw\/WithdrawRequest.html#destinationEthereumAddress:com.clluc.stockmind.core.ethereum.solidity.Address", "kind" : "val"}, {"label" : "masterAccountAddress", "tail" : ": Address", "member" : "com.clluc.stockmind.core.transaction.withdraw.WithdrawRequest.masterAccountAddress", "link" : "com\/clluc\/stockmind\/core\/transaction\/withdraw\/WithdrawRequest.html#masterAccountAddress:com.clluc.stockmind.core.ethereum.solidity.Address", "kind" : "val"}, {"label" : "sourceUserId", "tail" : ": UUID", "member" : "com.clluc.stockmind.core.transaction.withdraw.WithdrawRequest.sourceUserId", "link" : "com\/clluc\/stockmind\/core\/transaction\/withdraw\/WithdrawRequest.html#sourceUserId:java.util.UUID", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/core\/transaction\/withdraw\/WithdrawRequest.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/core\/transaction\/withdraw\/WithdrawRequest.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/core\/transaction\/withdraw\/WithdrawRequest.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/core\/transaction\/withdraw\/WithdrawRequest.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/core\/transaction\/withdraw\/WithdrawRequest.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/core\/transaction\/withdraw\/WithdrawRequest.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/core\/transaction\/withdraw\/WithdrawRequest.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/transaction\/withdraw\/WithdrawRequest.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/transaction\/withdraw\/WithdrawRequest.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/transaction\/withdraw\/WithdrawRequest.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/core\/transaction\/withdraw\/WithdrawRequest.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/core\/transaction\/withdraw\/WithdrawRequest.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/core\/transaction\/withdraw\/WithdrawRequest.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/core\/transaction\/withdraw\/WithdrawRequest.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/core\/transaction\/withdraw\/WithdrawRequest.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/core\/transaction\/withdraw\/WithdrawRequest.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "com\/clluc\/stockmind\/core\/transaction\/withdraw\/WithdrawRequest.html", "kind" : "case class"}], "com.clluc.stockmind.core.tokens" : [{"name" : "com.clluc.stockmind.core.tokens.TokensAdapter", "shortDescription" : "", "members_class" : [{"label" : "createToken", "tail" : "(tokenRequest: PostTokenRequest, userId: UUID): Future[ValidatedTokenCreationTxHash]", "member" : "com.clluc.stockmind.core.tokens.TokensAdapter.createToken", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokensAdapter.html#createToken(tokenRequest:com.clluc.stockmind.port.primary.TokensPort.PostTokenRequest,userId:java.util.UUID):scala.concurrent.Future[com.clluc.stockmind.port.primary.TokensPort.ValidatedTokenCreationTxHash]", "kind" : "def"}, {"label" : "findEthereumTokenByName", "tail" : "(name: String): Future[Option[Erc20Token]]", "member" : "com.clluc.stockmind.core.tokens.TokensAdapter.findEthereumTokenByName", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokensAdapter.html#findEthereumTokenByName(name:String):scala.concurrent.Future[Option[com.clluc.stockmind.core.ethereum.Erc20Token]]", "kind" : "def"}, {"label" : "findEthereumTokenBySymbol", "tail" : "(symbol: String): Future[Option[Erc20Token]]", "member" : "com.clluc.stockmind.core.tokens.TokensAdapter.findEthereumTokenBySymbol", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokensAdapter.html#findEthereumTokenBySymbol(symbol:String):scala.concurrent.Future[Option[com.clluc.stockmind.core.ethereum.Erc20Token]]", "kind" : "def"}, {"label" : "findAccountByUserId", "tail" : "(userId: UUID): Future[Option[EthereumAccount]]", "member" : "com.clluc.stockmind.core.tokens.TokensAdapter.findAccountByUserId", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokensAdapter.html#findAccountByUserId(userId:java.util.UUID):scala.concurrent.Future[Option[com.clluc.stockmind.core.ethereum.EthereumAccount]]", "kind" : "def"}, {"label" : "sendContractCreationTx", "tail" : "(name: String, symbol: String, initialAmount: String, decimals: Int, owner: Address): Future[JsonRpcPlainResult]", "member" : "com.clluc.stockmind.core.tokens.TokensAdapter.sendContractCreationTx", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokensAdapter.html#sendContractCreationTx(name:String,symbol:String,initialAmount:String,decimals:Int,owner:com.clluc.stockmind.core.ethereum.solidity.Address):scala.concurrent.Future[com.clluc.stockmind.core.ethereum.JsonRpcResponse.JsonRpcPlainResult]", "kind" : "def"}, {"label" : "supportedTokens", "tail" : "(): Future[List[Erc20Token]]", "member" : "com.clluc.stockmind.core.tokens.TokensAdapter.supportedTokens", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokensAdapter.html#supportedTokens():scala.concurrent.Future[List[com.clluc.stockmind.core.ethereum.Erc20Token]]", "kind" : "def"}, {"member" : "com.clluc.stockmind.core.tokens.TokensAdapter#<init>", "error" : "unsupported entity"}, {"label" : "executionContext", "tail" : ": ExecutionContext", "member" : "com.clluc.stockmind.core.tokens.TokensAdapter.executionContext", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokensAdapter.html#executionContext:scala.concurrent.ExecutionContext", "kind" : "implicit val"}, {"label" : "createTokenLogic", "tail" : "(tokenRequest: PostTokenRequest, userId: UUID)(ev: Monad[Future]): Future[ValidatedTokenCreationTxHash]", "member" : "com.clluc.stockmind.core.tokens.TokenCreationRequestOps.createTokenLogic", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokensAdapter.html#createTokenLogic(tokenRequest:com.clluc.stockmind.port.primary.TokensPort.PostTokenRequest,userId:java.util.UUID)(implicitev:cats.Monad[P]):P[com.clluc.stockmind.port.primary.TokensPort.ValidatedTokenCreationTxHash]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokensAdapter.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokensAdapter.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokensAdapter.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokensAdapter.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokensAdapter.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokensAdapter.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokensAdapter.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokensAdapter.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokensAdapter.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokensAdapter.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokensAdapter.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokensAdapter.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokensAdapter.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokensAdapter.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokensAdapter.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokensAdapter.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokensAdapter.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokensAdapter.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokensAdapter.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/clluc\/stockmind\/core\/tokens\/TokensAdapter.html", "kind" : "class"}, {"name" : "com.clluc.stockmind.core.tokens.TokenTransactionOpsImpl", "shortDescription" : "", "members_class" : [{"label" : "isPendingTransferFeatureFlagEnabled", "tail" : "(): Future[Boolean]", "member" : "com.clluc.stockmind.core.tokens.TokenTransactionOpsImpl.isPendingTransferFeatureFlagEnabled", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#isPendingTransferFeatureFlagEnabled:scala.concurrent.Future[Boolean]", "kind" : "def"}, {"label" : "stockmindUrl", "tail" : "(): Future[String]", "member" : "com.clluc.stockmind.core.tokens.TokenTransactionOpsImpl.stockmindUrl", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#stockmindUrl:scala.concurrent.Future[String]", "kind" : "def"}, {"label" : "settlePendingTransactionInRepository", "tail" : "(pendingTransfer: PendingTransfer, tokenTransfer: OffChainTransfer): Future[Unit]", "member" : "com.clluc.stockmind.core.tokens.TokenTransactionOpsImpl.settlePendingTransactionInRepository", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#settlePendingTransactionInRepository(pendingTransfer:com.clluc.stockmind.core.transaction.PendingTransfer,tokenTransfer:com.clluc.stockmind.core.transaction.OffChainTransfer):scala.concurrent.Future[Unit]", "kind" : "def"}, {"label" : "saveOutboundTransferData", "tail" : "(outboundTransfer: OutboundTransfer): Future[OutboundTransfer]", "member" : "com.clluc.stockmind.core.tokens.TokenTransactionOpsImpl.saveOutboundTransferData", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#saveOutboundTransferData(outboundTransfer:com.clluc.stockmind.core.transaction.OutboundTransfer):scala.concurrent.Future[com.clluc.stockmind.core.transaction.OutboundTransfer]", "kind" : "def"}, {"label" : "writeOffChainTransfer", "tail" : "(transfer: OffChainTransfer): Future[OffChainTransfer]", "member" : "com.clluc.stockmind.core.tokens.TokenTransactionOpsImpl.writeOffChainTransfer", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#writeOffChainTransfer(transfer:com.clluc.stockmind.core.transaction.OffChainTransfer):scala.concurrent.Future[com.clluc.stockmind.core.transaction.OffChainTransfer]", "kind" : "def"}, {"label" : "sendWithdrawTx", "tail" : "(signableTx: SignableTransaction): Future[JsonRpcPlainResult]", "member" : "com.clluc.stockmind.core.tokens.TokenTransactionOpsImpl.sendWithdrawTx", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#sendWithdrawTx(signableTx:com.clluc.stockmind.core.ethereum.SignableTransaction):scala.concurrent.Future[com.clluc.stockmind.core.ethereum.JsonRpcResponse.JsonRpcPlainResult]", "kind" : "def"}, {"label" : "isOmnibusAccountAddress", "tail" : "(address: Address): Future[Boolean]", "member" : "com.clluc.stockmind.core.tokens.TokenTransactionOpsImpl.isOmnibusAccountAddress", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#isOmnibusAccountAddress(address:com.clluc.stockmind.core.ethereum.solidity.Address):scala.concurrent.Future[Boolean]", "kind" : "def"}, {"label" : "findPendingTransfersByDestination", "tail" : "(loginInfo: LoginInfo): Future[List[PendingTransfer]]", "member" : "com.clluc.stockmind.core.tokens.TokenTransactionOpsImpl.findPendingTransfersByDestination", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#findPendingTransfersByDestination(loginInfo:com.clluc.stockmind.core.oauth.LoginInfo):scala.concurrent.Future[List[com.clluc.stockmind.core.transaction.PendingTransfer]]", "kind" : "def"}, {"label" : "findUserIdFromOAuthProviderAndLoginKey", "tail" : "(loginInfo: LoginInfo): Future[Option[UUID]]", "member" : "com.clluc.stockmind.core.tokens.TokenTransactionOpsImpl.findUserIdFromOAuthProviderAndLoginKey", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#findUserIdFromOAuthProviderAndLoginKey(loginInfo:com.clluc.stockmind.core.oauth.LoginInfo):scala.concurrent.Future[Option[java.util.UUID]]", "kind" : "def"}, {"label" : "findOAuth1InfoFromLoginInfo", "tail" : "(loginInfo: LoginInfo): Future[Option[OAuth1Info]]", "member" : "com.clluc.stockmind.core.tokens.TokenTransactionOpsImpl.findOAuth1InfoFromLoginInfo", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#findOAuth1InfoFromLoginInfo(loginInfo:com.clluc.stockmind.core.oauth.LoginInfo):scala.concurrent.Future[Option[com.clluc.stockmind.core.oauth.OAuth1Info]]", "kind" : "def"}, {"label" : "findStockmindUserFromId", "tail" : "(id: UUID): Future[Option[User]]", "member" : "com.clluc.stockmind.core.tokens.TokenTransactionOpsImpl.findStockmindUserFromId", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#findStockmindUserFromId(id:java.util.UUID):scala.concurrent.Future[Option[com.clluc.stockmind.core.user.User]]", "kind" : "def"}, {"label" : "findTwitterApiUserIdFromScreenName", "tail" : "(screenName: TwitterHandle, credentials: OAuth1Info): Future[Option[Long]]", "member" : "com.clluc.stockmind.core.tokens.TokenTransactionOpsImpl.findTwitterApiUserIdFromScreenName", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#findTwitterApiUserIdFromScreenName(screenName:com.clluc.stockmind.core.twitter.TwitterHandle,credentials:com.clluc.stockmind.core.oauth.OAuth1Info):scala.concurrent.Future[Option[Long]]", "kind" : "def"}, {"label" : "findBalanceForEthereumAddressAndToken", "tail" : "(address: Address, token: String): Future[Option[Balance]]", "member" : "com.clluc.stockmind.core.tokens.TokenTransactionOpsImpl.findBalanceForEthereumAddressAndToken", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#findBalanceForEthereumAddressAndToken(address:com.clluc.stockmind.core.ethereum.solidity.Address,token:String):scala.concurrent.Future[Option[com.clluc.stockmind.core.user.Balance]]", "kind" : "def"}, {"label" : "findEthereumAccountByAddress", "tail" : "(address: Address): Future[Option[EthereumAccount]]", "member" : "com.clluc.stockmind.core.tokens.TokenTransactionOpsImpl.findEthereumAccountByAddress", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#findEthereumAccountByAddress(address:com.clluc.stockmind.core.ethereum.solidity.Address):scala.concurrent.Future[Option[com.clluc.stockmind.core.ethereum.EthereumAccount]]", "kind" : "def"}, {"label" : "findEthereumAccountForUserId", "tail" : "(id: UUID): Future[Option[EthereumAccount]]", "member" : "com.clluc.stockmind.core.tokens.TokenTransactionOpsImpl.findEthereumAccountForUserId", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#findEthereumAccountForUserId(id:java.util.UUID):scala.concurrent.Future[Option[com.clluc.stockmind.core.ethereum.EthereumAccount]]", "kind" : "def"}, {"label" : "findTwitterAccountByScreenName", "tail" : "(screenName: TwitterHandle): Future[Option[TwitterAccount]]", "member" : "com.clluc.stockmind.core.tokens.TokenTransactionOpsImpl.findTwitterAccountByScreenName", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#findTwitterAccountByScreenName(screenName:com.clluc.stockmind.core.twitter.TwitterHandle):scala.concurrent.Future[Option[com.clluc.stockmind.core.twitter.TwitterAccount]]", "kind" : "def"}, {"label" : "findTwitterAccountByUserId", "tail" : "(id: UUID): Future[Option[TwitterAccount]]", "member" : "com.clluc.stockmind.core.tokens.TokenTransactionOpsImpl.findTwitterAccountByUserId", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#findTwitterAccountByUserId(id:java.util.UUID):scala.concurrent.Future[Option[com.clluc.stockmind.core.twitter.TwitterAccount]]", "kind" : "def"}, {"label" : "findTokenBySymbol", "tail" : "(symbol: String): Future[Option[Erc20Token]]", "member" : "com.clluc.stockmind.core.tokens.TokenTransactionOpsImpl.findTokenBySymbol", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#findTokenBySymbol(symbol:String):scala.concurrent.Future[Option[com.clluc.stockmind.core.ethereum.Erc20Token]]", "kind" : "def"}, {"label" : "notifyPendingTransfer", "tail" : "(transfer: Address): Future[Unit]", "member" : "com.clluc.stockmind.core.tokens.TokenTransactionOpsImpl.notifyPendingTransfer", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#notifyPendingTransfer(transfer:com.clluc.stockmind.core.ethereum.solidity.Address):scala.concurrent.Future[Unit]", "kind" : "def"}, {"label" : "notifyStockmindTransferParties", "tail" : "(transfer: OffChainTransfer): Future[Unit]", "member" : "com.clluc.stockmind.core.tokens.TokenTransactionOpsImpl.notifyStockmindTransferParties", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#notifyStockmindTransferParties(transfer:com.clluc.stockmind.core.transaction.OffChainTransfer):scala.concurrent.Future[Unit]", "kind" : "def"}, {"label" : "savePendingTransaction", "tail" : "(transfer: PendingTransfer): Future[TransactionIsPending.type]", "member" : "com.clluc.stockmind.core.tokens.TokenTransactionOpsImpl.savePendingTransaction", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#savePendingTransaction(transfer:com.clluc.stockmind.core.transaction.PendingTransfer):scala.concurrent.Future[com.clluc.stockmind.core.transaction.TransactionIsPending.type]", "kind" : "def"}, {"label" : "tweetToPendingTransferRecipient", "tail" : "(receiver: TwitterHandle, tweetInfo: TransferTweetInfo, credentials: OAuth1Info): Future[Unit]", "member" : "com.clluc.stockmind.core.tokens.TokenTransactionOpsImpl.tweetToPendingTransferRecipient", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#tweetToPendingTransferRecipient(receiver:com.clluc.stockmind.core.twitter.TwitterHandle,tweetInfo:com.clluc.stockmind.core.tokens.TokenTransactionOps.TransferTweetInfo,credentials:com.clluc.stockmind.core.oauth.OAuth1Info):scala.concurrent.Future[Unit]", "kind" : "def"}, {"member" : "com.clluc.stockmind.core.tokens.TokenTransactionOpsImpl#<init>", "error" : "unsupported entity"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "com\/clluc\/stockmind\/core\/tokens\/TokenTransactionOpsImpl.html", "kind" : "class"}], "com" : [], "com.clluc.stockmind.util" : [{"name" : "com.clluc.stockmind.util.LogicUtils", "shortDescription" : "", "object" : "com\/clluc\/stockmind\/util\/LogicUtils$.html", "members_object" : [{"label" : "PimpEitherT", "tail" : "", "member" : "com.clluc.stockmind.util.LogicUtils.PimpEitherT", "link" : "com\/clluc\/stockmind\/util\/LogicUtils$.html#PimpEitherT[F[_],L,R]extendsAnyRef", "kind" : "implicit class"}, {"label" : "logger", "tail" : ": Logger", "member" : "com.typesafe.scalalogging.LazyLogging.logger", "link" : "com\/clluc\/stockmind\/util\/LogicUtils$.html#logger:com.typesafe.scalalogging.Logger", "kind" : "lazy val"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/util\/LogicUtils$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/util\/LogicUtils$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/util\/LogicUtils$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/util\/LogicUtils$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/util\/LogicUtils$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/util\/LogicUtils$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/util\/LogicUtils$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/util\/LogicUtils$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/util\/LogicUtils$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/util\/LogicUtils$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/util\/LogicUtils$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/util\/LogicUtils$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/util\/LogicUtils$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/util\/LogicUtils$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/util\/LogicUtils$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/util\/LogicUtils$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/util\/LogicUtils$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/util\/LogicUtils$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/util\/LogicUtils$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.clluc.stockmind.core.signup" : [{"name" : "com.clluc.stockmind.core.signup.EthereumAccountOperationsAdapter", "shortDescription" : "", "object" : "com\/clluc\/stockmind\/core\/signup\/EthereumAccountOperationsAdapter$.html", "members_object" : [{"label" : "apply", "tail" : "(ethereumAccountPort: EthereumAccountPort, ethereumClientPort: EthereumClientPort)(ec: ExecutionContext): EthereumAccountOperationsAdapter", "member" : "com.clluc.stockmind.core.signup.EthereumAccountOperationsAdapter.apply", "link" : "com\/clluc\/stockmind\/core\/signup\/EthereumAccountOperationsAdapter$.html#apply(ethereumAccountPort:com.clluc.stockmind.port.secondary.EthereumAccountPort,ethereumClientPort:com.clluc.stockmind.port.secondary.EthereumClientPort)(implicitec:scala.concurrent.ExecutionContext):com.clluc.stockmind.core.signup.EthereumAccountOperationsAdapter", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/core\/signup\/EthereumAccountOperationsAdapter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/core\/signup\/EthereumAccountOperationsAdapter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/core\/signup\/EthereumAccountOperationsAdapter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/core\/signup\/EthereumAccountOperationsAdapter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/core\/signup\/EthereumAccountOperationsAdapter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/core\/signup\/EthereumAccountOperationsAdapter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/core\/signup\/EthereumAccountOperationsAdapter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/signup\/EthereumAccountOperationsAdapter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/signup\/EthereumAccountOperationsAdapter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/signup\/EthereumAccountOperationsAdapter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/core\/signup\/EthereumAccountOperationsAdapter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/core\/signup\/EthereumAccountOperationsAdapter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/core\/signup\/EthereumAccountOperationsAdapter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/core\/signup\/EthereumAccountOperationsAdapter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/core\/signup\/EthereumAccountOperationsAdapter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/core\/signup\/EthereumAccountOperationsAdapter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/core\/signup\/EthereumAccountOperationsAdapter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/core\/signup\/EthereumAccountOperationsAdapter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/core\/signup\/EthereumAccountOperationsAdapter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "com.clluc.stockmind.core.users" : [{"name" : "com.clluc.stockmind.core.users.UserAdapter", "shortDescription" : "", "object" : "com\/clluc\/stockmind\/core\/users\/UserAdapter$.html", "members_object" : [{"label" : "apply", "tail" : "(twitterAccountPort: TwitterAccountPort, ethereumAccountPort: EthereumAccountPort, balancePort: OffchainBalancePort, erc20InfoPort: Erc20InfoPort, secondaryUserPort: UserPort)(executionContext: ExecutionContext): UserAdapter", "member" : "com.clluc.stockmind.core.users.UserAdapter.apply", "link" : "com\/clluc\/stockmind\/core\/users\/UserAdapter$.html#apply(twitterAccountPort:com.clluc.stockmind.port.secondary.TwitterAccountPort,ethereumAccountPort:com.clluc.stockmind.port.secondary.EthereumAccountPort,balancePort:com.clluc.stockmind.port.secondary.OffchainBalancePort,erc20InfoPort:com.clluc.stockmind.port.secondary.Erc20InfoPort,secondaryUserPort:com.clluc.stockmind.port.secondary.UserPort)(implicitexecutionContext:scala.concurrent.ExecutionContext):com.clluc.stockmind.core.users.UserAdapter", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: ⇒ T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "com\/clluc\/stockmind\/core\/users\/UserAdapter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "com\/clluc\/stockmind\/core\/users\/UserAdapter$.html###():Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "com\/clluc\/stockmind\/core\/users\/UserAdapter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "com\/clluc\/stockmind\/core\/users\/UserAdapter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "com\/clluc\/stockmind\/core\/users\/UserAdapter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "com\/clluc\/stockmind\/core\/users\/UserAdapter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "com\/clluc\/stockmind\/core\/users\/UserAdapter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/users\/UserAdapter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/users\/UserAdapter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "com\/clluc\/stockmind\/core\/users\/UserAdapter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "com\/clluc\/stockmind\/core\/users\/UserAdapter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "com\/clluc\/stockmind\/core\/users\/UserAdapter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "com\/clluc\/stockmind\/core\/users\/UserAdapter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "com\/clluc\/stockmind\/core\/users\/UserAdapter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.equals", "link" : "com\/clluc\/stockmind\/core\/users\/UserAdapter$.html#equals(x$1:Any):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "com\/clluc\/stockmind\/core\/users\/UserAdapter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_]", "member" : "scala.AnyRef.getClass", "link" : "com\/clluc\/stockmind\/core\/users\/UserAdapter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "com\/clluc\/stockmind\/core\/users\/UserAdapter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "com\/clluc\/stockmind\/core\/users\/UserAdapter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}]};